<?php
/**
 * G√©n√©ration des donn√©es de test pour le syst√®me de tutorat
 * 1 admin, 52 tuteurs, 205 √©tudiants, 315 stages
 * Affectations coh√©rentes par d√©partement
 */
?>
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>G√©n√©ration des Donn√©es - Syst√®me de Tutorat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .data-container {
            max-width: 1000px;
            margin: 2rem auto;
            padding: 0 1rem;
        }
        
        .data-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            overflow: hidden;
        }
        
        .data-header {
            background: linear-gradient(135deg, #2ecc71, #27ae60);
            color: white;
            padding: 2rem;
            text-align: center;
        }
        
        .data-header h1 {
            margin: 0;
            font-size: 2.5rem;
            font-weight: 300;
        }
        
        .data-header p {
            margin: 0.5rem 0 0 0;
            opacity: 0.9;
        }
        
        .data-body {
            padding: 2rem;
        }
        
        .log-container {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 1.5rem;
            max-height: 500px;
            overflow-y: auto;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
        }
        
        .log-entry {
            margin: 8px 0;
            padding: 10px;
            border-left: 4px solid #28a745;
            background: rgba(40, 167, 69, 0.1);
            border-radius: 4px;
        }
        
        .progress-section {
            margin: 2rem 0;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 2rem 0;
        }
        
        .stat-card {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            padding: 1.5rem;
            border-radius: 10px;
            text-align: center;
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }
        
        .btn-gradient {
            background: linear-gradient(135deg, #3498db, #2980b9);
            border: none;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }
        
        .btn-gradient:hover {
            background: linear-gradient(135deg, #2980b9, #1f5582);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            color: white;
        }
    </style>
</head>
<body>
    <div class="data-container">
        <div class="data-card">
            <div class="data-header">
                <h1><i class="bi bi-database-fill-add me-3"></i>G√©n√©ration des Donn√©es</h1>
                <p>Cr√©ation des utilisateurs, entreprises, stages et affectations de test</p>
            </div>
            
            <div class="data-body">
                <div class="alert alert-info">
                    <h5><i class="bi bi-info-circle me-2"></i>Donn√©es qui seront g√©n√©r√©es</h5>
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-number">1</div>
                            <div class="stat-label">Administrateur</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">52</div>
                            <div class="stat-label">Tuteurs</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">205</div>
                            <div class="stat-label">√âtudiants</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">25</div>
                            <div class="stat-label">Entreprises</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">315</div>
                            <div class="stat-label">Stages</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number">205</div>
                            <div class="stat-label">Affectations</div>
                        </div>
                    </div>
                </div>
                
                <div class="text-center mb-4">
                    <?php if (!isset($_GET['start'])): ?>
                    <a href="?start=1" class="btn btn-gradient btn-lg">
                        <i class="bi bi-play-fill me-2"></i>D√©marrer la g√©n√©ration
                    </a>
                    <div class="mt-3">
                        <a href="install.php" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left me-2"></i>Retour √† l'installation
                        </a>
                    </div>
                    <?php endif; ?>
                </div>
                
                <?php if (isset($_GET['start'])): ?>
                <div class="log-container" id="logContainer">
                    <?php
                    echo "<div class='log-entry'><strong>" . date('H:i:s') . "</strong> üöÄ D√©but de la g√©n√©ration des donn√©es...</div>";
                    flush();
                    ob_flush();

set_time_limit(600); // 10 minutes

function logProgress($message) {
    echo "<div class='log-entry'><strong>" . date('H:i:s') . "</strong> - " . $message . "</div>";
    flush();
    ob_flush();
}

try {
    $db = new PDO("mysql:host=localhost;dbname=tutoring_system;charset=utf8", 'root', '');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    logProgress("‚úÖ Connexion √† la base de donn√©es r√©ussie");
    
    // D√©sactiver contraintes
    $db->exec("SET FOREIGN_KEY_CHECKS = 0");
    
    logProgress("üóëÔ∏è Suppression des donn√©es existantes...");
    
    // Tables dans l'ordre de suppression
    $tables = [
        'algorithm_executions', 'algorithm_parameters', 'conversation_participants', 
        'conversations', 'documents', 'evaluations', 'meeting_participants', 
        'meetings', 'messages', 'notifications', 'student_internship_preferences',
        'student_preferences', 'teacher_preferences', 'assignments', 'internships', 
        'companies', 'students', 'teachers', 'users'
    ];
    
    foreach ($tables as $table) {
        try {
            $stmt = $db->query("SHOW TABLES LIKE '$table'");
            if ($stmt->rowCount() > 0) {
                $db->exec("DELETE FROM $table");
                $db->exec("ALTER TABLE $table AUTO_INCREMENT = 1");
                logProgress("‚úÖ Table $table vid√©e");
            }
        } catch (Exception $e) {
            logProgress("‚ö†Ô∏è $table: " . $e->getMessage());
        }
    }
    
    $db->exec("SET FOREIGN_KEY_CHECKS = 1");
    $db->beginTransaction();
    
    // D√©tection structure tables
    $stmt = $db->query("DESCRIBE users");
    $userColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
    $hasUsername = in_array('username', $userColumns);
    
    logProgress("üë§ Structure d√©tect√©e - Username: " . ($hasUsername ? "OUI" : "NON"));
    
    // Mot de passe universel
    $hashedPassword = password_hash('12345678', PASSWORD_DEFAULT);
    
    // === D√âPARTEMENTS ET COH√âRENCE ===
    $departments = [
        'Informatique' => [
            'tutors' => 18, 'students' => 72,
            'specialties' => ['D√©veloppement Web', 'Intelligence Artificielle', 'Cybers√©curit√©', 'Data Science', 'DevOps']
        ],
        'G√©nie Civil' => [
            'tutors' => 12, 'students' => 48,
            'specialties' => ['Construction', 'BTP', 'Urbanisme', 'Environnement']
        ],
        '√âlectronique' => [
            'tutors' => 10, 'students' => 40,
            'specialties' => ['Syst√®mes Embarqu√©s', 'T√©l√©communications', 'Automatique', 'IoT']
        ],
        'M√©canique' => [
            'tutors' => 8, 'students' => 32,
            'specialties' => ['Conception', 'Production', 'Maintenance', 'Robotique']
        ],
        'Math√©matiques' => [
            'tutors' => 4, 'students' => 13,
            'specialties' => ['Statistiques', 'Mod√©lisation', 'Recherche Op√©rationnelle']
        ]
    ];
    
    logProgress("üéØ Cr√©ation de 1 admin + 52 tuteurs + 205 √©tudiants avec coh√©rence d√©partementale...");
    
    // === 1. ADMINISTRATEUR ===
    if ($hasUsername) {
        $stmt = $db->prepare("INSERT INTO users (first_name, last_name, email, username, password, role, department) VALUES (?, ?, ?, ?, ?, ?, ?)");
        $stmt->execute(['Administrateur', 'Syst√®me', 'admin@tutoring.fr', 'admin', $hashedPassword, 'admin', 'Administration']);
    } else {
        $stmt = $db->prepare("INSERT INTO users (first_name, last_name, email, password, role, department) VALUES (?, ?, ?, ?, ?, ?)");
        $stmt->execute(['Administrateur', 'Syst√®me', 'admin@tutoring.fr', $hashedPassword, 'admin', 'Administration']);
    }
    $adminId = $db->lastInsertId();
    logProgress("‚úÖ Administrateur cr√©√©: admin@tutoring.fr");
    
    // === 2. TUTEURS PAR D√âPARTEMENT ===
    $tutorNames = [
        'Informatique' => [
            ['Thomas', 'Martin'], ['Claire', 'Bernard'], ['Antoine', 'Dubois'], ['Julie', 'Robert'],
            ['Marc', 'Petit'], ['Laura', 'Richard'], ['Pierre', 'Durand'], ['Sophie', 'Moreau'],
            ['Nicolas', 'Laurent'], ['Marie', 'Simon'], ['David', 'Michel'], ['Emma', 'Lefebvre'],
            ['Julien', 'Leroy'], ['Caroline', 'Roux'], ['Olivier', 'David'], ['Sarah', 'Bertrand'],
            ['Fran√ßois', 'Morel'], ['Am√©lie', 'Fournier']
        ],
        'G√©nie Civil' => [
            ['Vincent', 'Girard'], ['Camille', 'Bonnet'], ['Alexandre', 'Dupont'], ['L√©a', 'Lambert'],
            ['Maxime', 'Fontaine'], ['Chlo√©', 'Rousseau'], ['Romain', 'Vincent'], ['Alice', 'Muller'],
            ['Lucas', 'Lefevre'], ['Manon', 'Moreau'], ['Th√©o', 'Garcia'], ['Zo√©', 'Boyer']
        ],
        '√âlectronique' => [
            ['Gabriel', 'Lopez'], ['Jade', 'Gonzalez'], ['Arthur', 'Wilson'], ['Sarah', 'Anderson'],
            ['Rapha√´l', 'Taylor'], ['Lola', 'Moore'], ['Tom', 'Jackson'], ['Clara', 'Lee'],
            ['Noah', 'Perez'], ['In√®s', 'Thompson']
        ],
        'M√©canique' => [
            ['Enzo', 'White'], ['Ana√Øs', 'Harris'], ['Ethan', 'Sanchez'], ['Margot', 'Clark'],
            ['Paul', 'Ramirez'], ['Romane', 'Lewis'], ['Adam', 'Robinson'], ['Juliette', 'Walker']
        ],
        'Math√©matiques' => [
            ['Victor', 'Young'], ['Louise', 'Allen'], ['Maxime', 'King'], ['Oc√©ane', 'Wright']
        ]
    ];
    
    $tutorIds = [];
    $tutorUserIds = [];
    $tutorsByDept = [];
    $usedUsernames = ['admin']; // Commencer avec admin d√©j√† utilis√©
    
    foreach ($departments as $dept => $config) {
        $tutorsByDept[$dept] = [];
        $names = $tutorNames[$dept];
        
        for ($i = 0; $i < $config['tutors']; $i++) {
            $firstName = $names[$i][0];
            $lastName = $names[$i][1];
            $email = strtolower($firstName . '.' . $lastName . '@universite.fr');
            $username = strtolower($firstName . '.' . $lastName);
            
            // Assurer l'unicit√© du username
            $originalUsername = $username;
            $counter = 1;
            while (in_array($username, $usedUsernames)) {
                $username = $originalUsername . $counter;
                $counter++;
            }
            $usedUsernames[] = $username;
            
            if ($hasUsername) {
                $stmt = $db->prepare("INSERT INTO users (first_name, last_name, email, username, password, role, department) VALUES (?, ?, ?, ?, ?, ?, ?)");
                $stmt->execute([$firstName, $lastName, $email, $username, $hashedPassword, 'teacher', $dept]);
            } else {
                $stmt = $db->prepare("INSERT INTO users (first_name, last_name, email, password, role, department) VALUES (?, ?, ?, ?, ?, ?)");
                $stmt->execute([$firstName, $lastName, $email, $hashedPassword, 'teacher', $dept]);
            }
            $userId = $db->lastInsertId();
            $tutorUserIds[] = $userId;
            
            // Cr√©er l'entr√©e teacher
            $stmt = $db->prepare("INSERT INTO teachers (user_id) VALUES (?)");
            $stmt->execute([$userId]);
            $teacherId = $db->lastInsertId();
            $tutorIds[] = $teacherId;
            $tutorsByDept[$dept][] = $teacherId;
        }
        
        logProgress("‚úÖ {$config['tutors']} tuteurs cr√©√©s pour $dept");
    }
    
    // === 3. √âTUDIANTS PAR D√âPARTEMENT ===
    // G√©n√©rer des noms uniques pour √©viter les conflits avec les tuteurs
    $studentFirstNames = [
        'Alexandre', 'Emma', 'Lucas', 'Chlo√©', 'Hugo', 'L√©a', 'Nathan', 'Manon', 
        'Baptiste', 'Pauline', 'Valentin', 'Ma√´lle', 'Maxence', 'Justine', 'Dylan', 'Morgane',
        'Kevin', 'Audrey', 'Bastien', 'C√©leste', 'Damien', 'Elodie', 'Florian', 'Ga√´lle',
        'Hadrien', 'Iris', 'Johan', 'Karine', 'L√©on', 'M√©lanie', 'Oscar', 'Nathalie',
        'Quentin', 'Rachel', 'S√©bastien', 'Tatiana', 'Ulysse', 'Val√©rie', 'William', 'Yasmine',
        'Zacharie', 'Ambre', 'Benjamin', 'Coralie', 'Dorian', 'Estelle', 'Fabien', 'Gwendoline',
        'Harold', 'Isabelle', 'J√©r√©my', 'Kelly', 'Lo√Øc', 'Mathilde', 'Nicolas', 'Oph√©lie'
    ];
    
    $studentLastNames = [
        'Blanchard', 'Chevallier', 'Deschamps', 'Fabre', 'Garnier', 'Humbert', 'Joly', 'Klein',
        'Legrand', 'Marchand', 'Noel', 'Olivier', 'Perrin', 'Quantin', 'Renaud', 'Saunier',
        'Tessier', 'Vidal', 'Weber', 'Xavier', 'Yvon', 'Ziegler', 'Aubry', 'Berger',
        'Colin', 'Delacroix', 'Etienne', 'Francois', 'Guillot', 'Henry', 'Ibert', 'Jacquet',
        'Keller', 'Lemaire', 'Meunier', 'Nicolas', 'Perrier', 'Roussel', 'Schmitt', 'Thibault',
        'Vanier', 'Wagner', 'Yves', 'Zimmerman', 'Arnaud', 'Boucher', 'Carpentier', 'Dufour',
        'Evrard', 'Fischer', 'Germain', 'Herve', 'Imbert', 'Janvier'
    ];
    
    // G√©n√©rer toutes les combinaisons possibles de pr√©noms et noms
    $studentNames = [];
    $usedCombinations = [];
    
    // Cr√©er des combinaisons uniques pr√©nom/nom sans num√©ros
    for ($i = 0; $i < 205; $i++) {
        $attempts = 0;
        do {
            $firstNameIndex = rand(0, count($studentFirstNames) - 1);
            $lastNameIndex = rand(0, count($studentLastNames) - 1);
            $firstName = $studentFirstNames[$firstNameIndex];
            $lastName = $studentLastNames[$lastNameIndex];
            $combination = $firstName . '|' . $lastName;
            $attempts++;
            
            // Si on ne trouve pas de combinaison unique apr√®s 50 tentatives, 
            // utiliser une combinaison s√©quentielle
            if ($attempts > 50) {
                $firstName = $studentFirstNames[$i % count($studentFirstNames)];
                $lastName = $studentLastNames[($i + count($studentFirstNames)) % count($studentLastNames)];
                $combination = $firstName . '|' . $lastName;
                break;
            }
        } while (in_array($combination, $usedCombinations));
        
        $usedCombinations[] = $combination;
        $studentNames[] = [$firstName, $lastName];
    }
    
    $studentIds = [];
    $studentUserIds = [];
    $studentsByDept = [];
    $studentIndex = 0;
    // $usedUsernames d√©j√† d√©fini et contient admin + tous les tuteurs
    
    $levels = ['L1', 'L2', 'L3', 'M1', 'M2'];
    
    foreach ($departments as $dept => $config) {
        $studentsByDept[$dept] = [];
        
        for ($i = 0; $i < $config['students']; $i++) {
            $firstName = $studentNames[$studentIndex][0];
            $lastName = $studentNames[$studentIndex][1];
            $email = strtolower($firstName . '.' . $lastName . '@etudiant.fr');
            $username = strtolower($firstName . '.' . $lastName);
            
            // Assurer l'unicit√© du username
            $originalUsername = $username;
            $counter = 1;
            while (in_array($username, $usedUsernames)) {
                $username = $originalUsername . $counter;
                $counter++;
            }
            $usedUsernames[] = $username;
            
            $level = $levels[rand(0, count($levels) - 1)];
            
            if ($hasUsername) {
                $stmt = $db->prepare("INSERT INTO users (first_name, last_name, email, username, password, role, department) VALUES (?, ?, ?, ?, ?, ?, ?)");
                $stmt->execute([$firstName, $lastName, $email, $username, $hashedPassword, 'student', $dept]);
            } else {
                $stmt = $db->prepare("INSERT INTO users (first_name, last_name, email, password, role, department) VALUES (?, ?, ?, ?, ?, ?)");
                $stmt->execute([$firstName, $lastName, $email, $hashedPassword, 'student', $dept]);
            }
            $userId = $db->lastInsertId();
            $studentUserIds[] = $userId;
            
            // Cr√©er l'entr√©e student
            $studentNumber = 'ET' . str_pad($studentIndex + 1, 4, '0', STR_PAD_LEFT);
            $stmt = $db->prepare("INSERT INTO students (user_id, student_number, program, level) VALUES (?, ?, ?, ?)");
            $stmt->execute([$userId, $studentNumber, $dept, $level]);
            $studentId = $db->lastInsertId();
            $studentIds[] = $studentId;
            $studentsByDept[$dept][] = $studentId;
            
            $studentIndex++;
        }
        
        logProgress("‚úÖ {$config['students']} √©tudiants cr√©√©s pour $dept");
    }
    
    // === 4. ENTREPRISES PAR SECTEUR ===
    logProgress("üè¢ Cr√©ation de 25 entreprises sp√©cialis√©es par secteur...");
    
    $companiesBySector = [
        'Informatique' => [
            ['TechCorp Solutions', 'D√©veloppement logiciel et consulting IT'],
            ['InnovSoft', 'Intelligence artificielle et machine learning'],
            ['DataSystems Pro', 'Big Data et analytics avanc√©s'],
            ['WebDev France', 'D√©veloppement web et applications mobiles'],
            ['CyberSec Expert', 'Cybers√©curit√© et audit informatique'],
            ['CloudTech', 'Services cloud et infrastructure'],
            ['AI Dynamics', 'Intelligence artificielle industrielle']
        ],
        'G√©nie Civil' => [
            ['ConstructPlus', 'Construction et r√©novation urbaine'],
            ['BTP Solutions', 'B√¢timent et travaux publics'],
            ['UrbanTech', 'Urbanisme et am√©nagement territorial'],
            ['EcoBuild', 'Construction √©cologique et durable'],
            ['InfraTech', 'Infrastructure et g√©nie civil']
        ],
        '√âlectronique' => [
            ['ElectroDev', 'Syst√®mes embarqu√©s et IoT'],
            ['TelecomPlus', 'T√©l√©communications et r√©seaux'],
            ['AutomaticSys', 'Automatisation industrielle'],
            ['SmartDevices', 'Appareils √©lectroniques intelligents'],
            ['IoT Solutions', 'Internet des objets industriel']
        ],
        'M√©canique' => [
            ['MecaTech', 'Conception m√©canique automobile'],
            ['RoboMeca', 'Robotique industrielle'],
            ['ProductionPro', 'Syst√®mes de production automatis√©s'],
            ['MaintenancePlus', 'Maintenance industrielle avanc√©e']
        ],
        'Math√©matiques' => [
            ['StatAnalytics', 'Analyse statistique et mod√©lisation'],
            ['MathConsult', 'Consulting math√©matique et recherche op√©rationnelle']
        ]
    ];
    
    $companyIds = [];
    $companiesByDept = [];
    
    foreach ($companiesBySector as $sector => $companies) {
        $companiesByDept[$sector] = [];
        
        foreach ($companies as $company) {
            $stmt = $db->prepare("INSERT INTO companies (name, description) VALUES (?, ?)");
            $stmt->execute([$company[0], $company[1]]);
            $companyId = $db->lastInsertId();
            $companyIds[] = $companyId;
            $companiesByDept[$sector][] = $companyId;
        }
    }
    
    logProgress("‚úÖ " . count($companyIds) . " entreprises cr√©√©es");
    
    // === 5. STAGES COH√âRENTS PAR DOMAINE ===
    logProgress("üíº Cr√©ation de 315 stages coh√©rents...");
    
    // Stages professionnels uniques avec informations compl√®tes
    $internshipDataByDept = [
        'Informatique' => [
            [
                'title' => 'D√©veloppeur Web Frontend',
                'requirements' => 'HTML/CSS, JavaScript, React ou Vue.js, Git, Responsive Design',
                'location' => 'Paris',
                'compensation' => 1200,
                'domain' => 'D√©veloppement Web'
            ],
            [
                'title' => 'D√©veloppeur Web Backend',
                'requirements' => 'PHP/Python/Node.js, MySQL/PostgreSQL, API REST, Docker',
                'location' => 'Lyon',
                'compensation' => 1300,
                'domain' => 'D√©veloppement Web'
            ],
            [
                'title' => 'D√©veloppeur Full Stack',
                'requirements' => 'React/Angular, Node.js, MongoDB, TypeScript, DevOps notions',
                'location' => 'Toulouse',
                'compensation' => 1400,
                'domain' => 'D√©veloppement Web'
            ],
            [
                'title' => 'Data Scientist Junior',
                'requirements' => 'Python, Pandas, Scikit-learn, SQL, Machine Learning, Statistiques',
                'location' => 'Paris',
                'compensation' => 1500,
                'domain' => 'Data Science'
            ],
            [
                'title' => 'Analyste de Donn√©es',
                'requirements' => 'SQL, Power BI/Tableau, Excel avanc√©, Statistiques descriptives',
                'location' => 'Marseille',
                'compensation' => 1100,
                'domain' => 'Data Analytics'
            ],
            [
                'title' => 'Ing√©nieur Big Data',
                'requirements' => 'Hadoop, Spark, Kafka, Python/Scala, NoSQL, Cloud (AWS/Azure)',
                'location' => 'Paris',
                'compensation' => 1600,
                'domain' => 'Big Data'
            ],
            [
                'title' => 'D√©veloppeur Mobile iOS',
                'requirements' => 'Swift, Xcode, UIKit/SwiftUI, Core Data, iOS SDK',
                'location' => 'Nantes',
                'compensation' => 1350,
                'domain' => 'D√©veloppement Mobile'
            ],
            [
                'title' => 'D√©veloppeur Mobile Android',
                'requirements' => 'Kotlin/Java, Android Studio, API REST, SQLite, Material Design',
                'location' => 'Lille',
                'compensation' => 1350,
                'domain' => 'D√©veloppement Mobile'
            ],
            [
                'title' => 'D√©veloppeur React Native',
                'requirements' => 'React Native, JavaScript/TypeScript, Redux, Firebase',
                'location' => 'Bordeaux',
                'compensation' => 1300,
                'domain' => 'D√©veloppement Mobile'
            ],
            [
                'title' => 'Ing√©nieur DevOps',
                'requirements' => 'Docker, Kubernetes, CI/CD, AWS/Azure, Linux, Infrastructure as Code',
                'location' => 'Paris',
                'compensation' => 1700,
                'domain' => 'Infrastructure'
            ],
            [
                'title' => 'Administrateur Syst√®mes',
                'requirements' => 'Linux/Windows Server, VMware, Active Directory, Monitoring, Scripting',
                'location' => 'Strasbourg',
                'compensation' => 1250,
                'domain' => 'Infrastructure'
            ],
            [
                'title' => 'Architecte Cloud',
                'requirements' => 'AWS/Azure/GCP, Terraform, Microservices, S√©curit√© cloud',
                'location' => 'Paris',
                'compensation' => 1800,
                'domain' => 'Cloud Computing'
            ],
            [
                'title' => 'Sp√©cialiste Cybers√©curit√©',
                'requirements' => 'Pentesting, OWASP, Cryptographie, ISO 27001, R√©seaux, SIEM',
                'location' => 'Lyon',
                'compensation' => 1600,
                'domain' => 'S√©curit√© Informatique'
            ],
            [
                'title' => 'Auditeur S√©curit√© IT',
                'requirements' => 'Audit informatique, EBIOS, Compliance, Gestion des risques',
                'location' => 'Paris',
                'compensation' => 1400,
                'domain' => 'Audit S√©curit√©'
            ],
            [
                'title' => 'Consultant IT',
                'requirements' => 'Gestion de projet, UML, Business Analysis, Communication client',
                'location' => 'Nice',
                'compensation' => 1300,
                'domain' => 'Conseil IT'
            ],
            [
                'title' => 'D√©veloppeur Intelligence Artificielle',
                'requirements' => 'Python, TensorFlow/PyTorch, Deep Learning, Computer Vision, NLP',
                'location' => 'Paris',
                'compensation' => 1700,
                'domain' => 'Intelligence Artificielle'
            ],
            [
                'title' => 'Ing√©nieur Machine Learning',
                'requirements' => 'Python, Scikit-learn, MLOps, Feature Engineering, Mod√©lisation pr√©dictive',
                'location' => 'Grenoble',
                'compensation' => 1650,
                'domain' => 'Machine Learning'
            ],
            [
                'title' => 'UX/UI Designer',
                'requirements' => 'Figma/Adobe XD, Design Thinking, Prototypage, Tests utilisateurs',
                'location' => 'Paris',
                'compensation' => 1200,
                'domain' => 'Design UX/UI'
            ],
            [
                'title' => 'Ing√©nieur Blockchain',
                'requirements' => 'Solidity, Ethereum, Smart Contracts, Cryptographie, DeFi',
                'location' => 'Paris',
                'compensation' => 1750,
                'domain' => 'Blockchain'
            ],
            [
                'title' => 'D√©veloppeur Game Developer',
                'requirements' => 'Unity/Unreal Engine, C#/C++, Game Design, 3D, Physics Engine',
                'location' => 'Lyon',
                'compensation' => 1400,
                'domain' => 'Jeux Vid√©o'
            ]
        ],
        'G√©nie Civil' => [
            [
                'title' => 'Ing√©nieur Bureau d\'√âtudes',
                'requirements' => 'AutoCAD, Revit, Calcul de structures, B√©ton arm√©, Eurocode',
                'location' => 'Paris',
                'compensation' => 1300,
                'domain' => 'Bureau d\'√âtudes'
            ],
            [
                'title' => 'Chef de Chantier Junior',
                'requirements' => 'Gestion de chantier, S√©curit√© BTP, Planning, Management √©quipes',
                'location' => 'Lyon',
                'compensation' => 1400,
                'domain' => 'Conduite de Travaux'
            ],
            [
                'title' => 'Conducteur de Travaux',
                'requirements' => 'Gestion de projet BTP, Budget, Planning, R√©glementation',
                'location' => 'Marseille',
                'compensation' => 1500,
                'domain' => 'Conduite de Travaux'
            ],
            [
                'title' => 'Ing√©nieur Structure',
                'requirements' => 'RDM, Calcul b√©ton/acier, Robot Structural, Note de calcul',
                'location' => 'Toulouse',
                'compensation' => 1350,
                'domain' => 'Structures'
            ],
            [
                'title' => 'Charg√© d\'Affaires BTP',
                'requirements' => 'Commercial BTP, Chiffrage, N√©gociation, Relation client',
                'location' => 'Nantes',
                'compensation' => 1450,
                'domain' => 'Commercial BTP'
            ],
            [
                'title' => 'Technicien G√©otechnique',
                'requirements' => 'M√©canique des sols, Essais laboratoire, Fondations, Terrassement',
                'location' => 'Lille',
                'compensation' => 1150,
                'domain' => 'G√©otechnique'
            ],
            [
                'title' => 'Ing√©nieur Environnement',
                'requirements' => '√âtudes d\'impact, HQE, D√©veloppement durable, R√©glementation environnementale',
                'location' => 'Bordeaux',
                'compensation' => 1300,
                'domain' => 'Environnement'
            ],
            [
                'title' => 'Urbaniste Junior',
                'requirements' => 'Am√©nagement du territoire, SIG, Plans locaux d\'urbanisme, Concertation',
                'location' => 'Strasbourg',
                'compensation' => 1250,
                'domain' => 'Urbanisme'
            ],
            [
                'title' => 'Dessinateur-Projeteur',
                'requirements' => 'AutoCAD, SketchUp, Plans d\'ex√©cution, M√©tr√©, Lecture de plans',
                'location' => 'Rennes',
                'compensation' => 1100,
                'domain' => 'Dessin Technique'
            ],
            [
                'title' => 'Ing√©nieur Travaux Publics',
                'requirements' => 'VRD, Routes, Ouvrages d\'art, Topographie, Enrob√©s',
                'location' => 'Clermont-Ferrand',
                'compensation' => 1350,
                'domain' => 'Travaux Publics'
            ],
            [
                'title' => 'Responsable QSE',
                'requirements' => 'Qualit√©, S√©curit√©, Environnement, ISO 9001/14001, Document unique',
                'location' => 'Montpellier',
                'compensation' => 1400,
                'domain' => 'Qualit√© S√©curit√©'
            ],
            [
                'title' => 'M√©treur-V√©rificateur',
                'requirements' => 'M√©tr√© BTP, Avant-m√©tr√©, Facturation, Suivi budg√©taire, Quantitatif',
                'location' => 'Rouen',
                'compensation' => 1200,
                'domain' => 'M√©tr√©'
            ]
        ],
        '√âlectronique' => [
            [
                'title' => 'Ing√©nieur Syst√®mes Embarqu√©s',
                'requirements' => 'C/C++, Microcontr√¥leurs, RTOS, Protocoles communication, PCB',
                'location' => 'Grenoble',
                'compensation' => 1450,
                'domain' => 'Syst√®mes Embarqu√©s'
            ],
            [
                'title' => 'D√©veloppeur IoT',
                'requirements' => 'Arduino/Raspberry Pi, Capteurs, WiFi/Bluetooth, Cloud IoT, Python/C',
                'location' => 'Toulouse',
                'compensation' => 1350,
                'domain' => 'Internet des Objets'
            ],
            [
                'title' => 'Technicien √âlectronique',
                'requirements' => '√âlectronique analogique/num√©rique, Mesures, Oscilloscope, Soudure CMS',
                'location' => 'Lyon',
                'compensation' => 1000,
                'domain' => '√âlectronique G√©n√©rale'
            ],
            [
                'title' => 'Ing√©nieur T√©l√©communications',
                'requirements' => 'R√©seaux t√©l√©com, Antennes, RF, Protocoles 4G/5G, Traitement signal',
                'location' => 'Paris',
                'compensation' => 1500,
                'domain' => 'T√©l√©communications'
            ],
            [
                'title' => 'Automaticien',
                'requirements' => 'Automates programmables, SCADA, Supervision industrielle, Grafcet',
                'location' => 'Lille',
                'compensation' => 1300,
                'domain' => 'Automatisation'
            ],
            [
                'title' => 'Ing√©nieur Signal',
                'requirements' => 'Traitement signal num√©rique, MATLAB/Simulink, DSP, Filtrage',
                'location' => 'Nice',
                'compensation' => 1400,
                'domain' => 'Traitement Signal'
            ],
            [
                'title' => 'Technicien R√©seau',
                'requirements' => 'Cisco, Configuration switches/routeurs, TCP/IP, VLAN, S√©curit√© r√©seau',
                'location' => 'Nantes',
                'compensation' => 1150,
                'domain' => 'R√©seaux'
            ],
            [
                'title' => 'Ing√©nieur Test √âlectronique',
                'requirements' => 'Bancs de test, LabVIEW, Validation produits, M√©trologie',
                'location' => 'Bordeaux',
                'compensation' => 1350,
                'domain' => 'Test & Validation'
            ],
            [
                'title' => 'Concepteur Circuits',
                'requirements' => 'KiCad/Altium, Conception PCB, Routage, Compatibilit√© √©lectromagn√©tique',
                'location' => 'Marseille',
                'compensation' => 1300,
                'domain' => 'Conception Circuits'
            ],
            [
                'title' => 'Ing√©nieur Radiofr√©quence',
                'requirements' => 'RF/Hyperfr√©quences, Antennes, Amplificateurs, ADS/CST',
                'location' => 'Sophia Antipolis',
                'compensation' => 1550,
                'domain' => 'Radiofr√©quence'
            ],
            [
                'title' => 'Sp√©cialiste FPGA',
                'requirements' => 'VHDL/Verilog, Xilinx/Intel FPGA, Synth√®se logique, Timing',
                'location' => 'Grenoble',
                'compensation' => 1500,
                'domain' => 'FPGA'
            ],
            [
                'title' => 'Ing√©nieur Micro√©lectronique',
                'requirements' => 'Conception circuits int√©gr√©s, Analog IC Design, Layout, SPICE',
                'location' => 'Grenoble',
                'compensation' => 1600,
                'domain' => 'Micro√©lectronique'
            ]
        ],
        'M√©canique' => [
            [
                'title' => 'Ing√©nieur Conception M√©canique',
                'requirements' => 'SolidWorks/CATIA, Calcul m√©canique, Cotation fonctionnelle, Mat√©riaux',
                'location' => 'Lyon',
                'compensation' => 1350,
                'domain' => 'Conception M√©canique'
            ],
            [
                'title' => 'Dessinateur Industriel',
                'requirements' => 'AutoCAD/SolidWorks, Plans d\'ensemble, Nomenclatures, Tol√©rancement',
                'location' => 'Toulouse',
                'compensation' => 1100,
                'domain' => 'Dessin Industriel'
            ],
            [
                'title' => 'Technicien Maintenance',
                'requirements' => 'Maintenance pr√©ventive/curative, GMAO, Hydraulique/Pneumatique, √âlectrom√©canique',
                'location' => 'Marseille',
                'compensation' => 1200,
                'domain' => 'Maintenance Industrielle'
            ],
            [
                'title' => 'Ing√©nieur Production',
                'requirements' => 'Lean Manufacturing, 6 Sigma, Planification production, Am√©lioration continue',
                'location' => 'Paris',
                'compensation' => 1400,
                'domain' => 'Production'
            ],
            [
                'title' => 'Roboticien',
                'requirements' => 'Robotique industrielle, Programmation robots, Vision artificielle, Automatisation',
                'location' => 'Grenoble',
                'compensation' => 1500,
                'domain' => 'Robotique'
            ],
            [
                'title' => 'Ing√©nieur Qualit√©',
                'requirements' => 'ISO 9001, MSP, Plans d\'exp√©rience, M√©trologie, Audit qualit√©',
                'location' => 'Lille',
                'compensation' => 1300,
                'domain' => 'Qualit√©'
            ],
            [
                'title' => 'Technicien Usinage',
                'requirements' => 'Machines-outils CN, Programmation ISO, M√©trologie dimensionnelle, Mat√©riaux',
                'location' => 'Nancy',
                'compensation' => 1050,
                'domain' => 'Usinage'
            ],
            [
                'title' => 'Ing√©nieur Proc√©d√©s',
                'requirements' => 'G√©nie des proc√©d√©s, Simulation, Optimisation, Transferts thermiques',
                'location' => 'Nantes',
                'compensation' => 1400,
                'domain' => 'Proc√©d√©s'
            ],
            [
                'title' => 'Charg√© d\'Industrialisation',
                'requirements' => 'Industrialisation produits, DFM, Processus de fabrication, Co√ªts',
                'location' => 'Bordeaux',
                'compensation' => 1350,
                'domain' => 'Industrialisation'
            ],
            [
                'title' => 'Ing√©nieur R&D M√©canique',
                'requirements' => 'Innovation produit, Prototypage, Simulations num√©riques, Recherche appliqu√©e',
                'location' => 'Paris',
                'compensation' => 1450,
                'domain' => 'Recherche & D√©veloppement'
            ],
            [
                'title' => 'Technicien M√©trologie',
                'requirements' => 'Machines √† mesurer tridimensionnelles, √âtalonnage, Incertitudes, COFRAC',
                'location' => 'Strasbourg',
                'compensation' => 1150,
                'domain' => 'M√©trologie'
            ],
            [
                'title' => 'Pilote d\'√élot de Production',
                'requirements' => 'Gestion flux production, Kanban, Management √©quipe, Indicateurs performance',
                'location' => 'Rennes',
                'compensation' => 1250,
                'domain' => 'Production'
            ]
        ],
        'Math√©matiques' => [
            [
                'title' => 'Analyste Quantitatif',
                'requirements' => 'Math√©matiques financi√®res, Mod√©lisation stochastique, Python/R, D√©riv√©s',
                'location' => 'Paris',
                'compensation' => 1600,
                'domain' => 'Finance Quantitative'
            ],
            [
                'title' => 'Data Analyst',
                'requirements' => 'SQL, Python/R, Statistiques, Visualisation donn√©es, Business Intelligence',
                'location' => 'Lyon',
                'compensation' => 1300,
                'domain' => 'Analyse de Donn√©es'
            ],
            [
                'title' => 'Statisticien',
                'requirements' => 'Statistiques avanc√©es, Tests d\'hypoth√®ses, Plans d\'exp√©rience, SAS/R',
                'location' => 'Toulouse',
                'compensation' => 1350,
                'domain' => 'Statistiques'
            ],
            [
                'title' => 'Consultant Actuariel',
                'requirements' => 'Sciences actuarielles, Solvabilit√© II, Tarification, Gestion risques',
                'location' => 'Paris',
                'compensation' => 1500,
                'domain' => 'Actuariat'
            ],
            [
                'title' => 'Mod√©lisateur Financier',
                'requirements' => 'Mod√®les financiers, VBA/Python, Gestion de portefeuille, Risque de march√©',
                'location' => 'Paris',
                'compensation' => 1550,
                'domain' => 'Mod√©lisation Financi√®re'
            ],
            [
                'title' => 'Chercheur en Math√©matiques Appliqu√©es',
                'requirements' => 'Math√©matiques appliqu√©es, Recherche op√©rationnelle, Optimisation, Publications',
                'location' => 'Grenoble',
                'compensation' => 1400,
                'domain' => 'Recherche Math√©matique'
            ]
        ]
    ];
    
    $internshipIds = [];
    $internshipsByDept = [];
    $internshipCount = 0;
    $targetCounts = [
        'Informatique' => 126, // 315 * 0.4
        'G√©nie Civil' => 95,   // 315 * 0.3
        '√âlectronique' => 63,  // 315 * 0.2
        'M√©canique' => 32,     // 315 * 0.1
        'Math√©matiques' => 19  // Le reste
    ];
    
    foreach ($departments as $dept => $config) {
        $internshipsByDept[$dept] = [];
        $internshipData = $internshipDataByDept[$dept];
        $companies = $companiesByDept[$dept];
        $targetCount = $targetCounts[$dept];
        
        // Cr√©er chaque stage unique une fois
        foreach ($internshipData as $stageInfo) {
            $companyId = $companies[rand(0, count($companies) - 1)];
            
            // Dates variables
            $startDates = ['2025-02-01', '2025-03-01', '2025-04-01', '2025-05-01', '2025-06-01', '2025-07-01'];
            $startDate = $startDates[rand(0, count($startDates) - 1)];
            $endDate = date('Y-m-d', strtotime($startDate . ' +4 months'));
            
            $description = "Stage de 4 mois en " . $stageInfo['domain'] . " - " . $stageInfo['title'] . ". Mission formatrice dans un environnement professionnel stimulant avec possibilit√© d'int√©gration.";
            
            $stmt = $db->prepare("INSERT INTO internships (title, company_id, start_date, end_date, description, requirements, location, compensation, domain, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'available')");
            $stmt->execute([
                $stageInfo['title'],
                $companyId,
                $startDate,
                $endDate,
                $description,
                $stageInfo['requirements'],
                $stageInfo['location'],
                $stageInfo['compensation'],
                $stageInfo['domain'],
            ]);
            
            $internshipId = $db->lastInsertId();
            $internshipIds[] = $internshipId;
            $internshipsByDept[$dept][] = $internshipId;
            $internshipCount++;
        }
        
        // Si on a besoin de plus de stages, r√©p√©ter en cycle avec des variations
        $remainingCount = $targetCount - count($internshipData);
        if ($remainingCount > 0) {
            for ($i = 0; $i < $remainingCount; $i++) {
                $baseStage = $internshipData[$i % count($internshipData)];
                $companyId = $companies[rand(0, count($companies) - 1)];
                
                // Variations pour rendre uniques
                $variations = [
                    'Senior' => ['compensation' => $baseStage['compensation'] + 200, 'suffix' => ' Senior'],
                    'Junior' => ['compensation' => $baseStage['compensation'] - 100, 'suffix' => ' Junior'],
                    'Alternance' => ['compensation' => $baseStage['compensation'] - 200, 'suffix' => ' (Alternance)'],
                    'R&D' => ['compensation' => $baseStage['compensation'] + 150, 'suffix' => ' R&D'],
                    'Projet' => ['compensation' => $baseStage['compensation'] + 100, 'suffix' => ' - Projet sp√©cial']
                ];
                
                $variationKey = array_keys($variations)[rand(0, count($variations) - 1)];
                $variation = $variations[$variationKey];
                
                $title = $baseStage['title'] . $variation['suffix'];
                
                // Dates variables
                $startDates = ['2025-02-01', '2025-03-01', '2025-04-01', '2025-05-01', '2025-06-01', '2025-07-01'];
                $startDate = $startDates[rand(0, count($startDates) - 1)];
                $endDate = date('Y-m-d', strtotime($startDate . ' +4 months'));
                
                $description = "Stage de 4 mois en " . $baseStage['domain'] . " - " . $title . ". Mission formatrice dans un environnement professionnel stimulant avec possibilit√© d'int√©gration.";
                
                $stmt = $db->prepare("INSERT INTO internships (title, company_id, start_date, end_date, description, requirements, location, compensation, domain, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'available')");
                $stmt->execute([
                    $title,
                    $companyId,
                    $startDate,
                    $endDate,
                    $description,
                    $baseStage['requirements'],
                    $baseStage['location'],
                    $variation['compensation'],
                    $baseStage['domain'],
                ]);
                
                $internshipId = $db->lastInsertId();
                $internshipIds[] = $internshipId;
                $internshipsByDept[$dept][] = $internshipId;
                $internshipCount++;
            }
        }
        
        logProgress("‚úÖ " . count($internshipsByDept[$dept]) . " stages cr√©√©s pour $dept (uniques et professionnels)");
    }
    
    // === 6. AFFECTATIONS COH√âRENTES ===
    logProgress("üìã Cr√©ation des affectations coh√©rentes (1-5 √©tudiants par tuteur)...");
    
    $assignmentCount = 0;
    $usedStudents = [];
    $usedInternships = [];
    
    foreach ($departments as $dept => $config) {
        $deptTutors = $tutorsByDept[$dept];
        $deptStudents = $studentsByDept[$dept];
        $deptInternships = $internshipsByDept[$dept];
        
        foreach ($deptTutors as $tutorId) {
            $studentsPerTutor = rand(1, 5); // 1 √† 5 √©tudiants par tuteur
            $assignedToThisTutor = 0;
            
            for ($s = 0; $s < $studentsPerTutor && $assignedToThisTutor < 5; $s++) {
                // Trouver un √©tudiant non affect√© du m√™me d√©partement
                $availableStudents = array_diff($deptStudents, $usedStudents);
                if (empty($availableStudents)) break;
                
                $studentId = $availableStudents[array_rand($availableStudents)];
                
                // Trouver un stage non affect√© du m√™me d√©partement
                $availableInternships = array_diff($deptInternships, $usedInternships);
                if (empty($availableInternships)) break;
                
                $internshipId = $availableInternships[array_rand($availableInternships)];
                
                $statuses = ['pending', 'confirmed', 'confirmed', 'confirmed']; // 75% confirm√©
                $status = $statuses[rand(0, count($statuses) - 1)];
                
                $stmt = $db->prepare("INSERT INTO assignments (student_id, teacher_id, internship_id, status, compatibility_score, satisfaction_score, notes) VALUES (?, ?, ?, ?, ?, ?, ?)");
                $stmt->execute([
                    $studentId,
                    $tutorId,
                    $internshipId,
                    $status,
                    rand(75, 98), // Score compatibilit√© √©lev√© (m√™me d√©partement)
                    rand(3, 5),   // Score satisfaction
                    "Affectation coh√©rente en $dept. Profil √©tudiant adapt√© aux exigences du stage."
                ]);
                
                // Mettre √† jour le statut du stage en 'assigned' si l'affectation est confirm√©e
                if ($status === 'confirmed') {
                    $updateStmt = $db->prepare("UPDATE internships SET status = 'assigned' WHERE id = ?");
                    $updateStmt->execute([$internshipId]);
                }
                
                $usedStudents[] = $studentId;
                $usedInternships[] = $internshipId;
                $assignmentCount++;
                $assignedToThisTutor++;
            }
        }
        
        logProgress("‚úÖ Affectations cr√©√©es pour $dept");
    }
    
    logProgress("‚úÖ Total: $assignmentCount affectations coh√©rentes cr√©√©es");
    
    // === 7. √âVALUATIONS COMPL√àTES (3 PAR √âTUDIANT AFFECT√â) ===
    logProgress("üìä Cr√©ation des √©valuations compl√®tes (final, mid-term, auto-√©valuation)...");
    
    try {
        $stmt = $db->query("DESCRIBE evaluations");
        $evalColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
        
        $evaluationCount = 0;
        
        // R√©cup√©rer TOUTES les affectations (pas seulement confirm√©es)
        $stmt = $db->query("SELECT a.id as assignment_id, a.student_id, a.teacher_id, a.status FROM assignments a");
        $allAssignments = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        logProgress("üìã Trouv√© " . count($allAssignments) . " affectations pour √©valuations");
        
        foreach ($allAssignments as $assignment) {
            // 1. √âVALUATION MI-PARCOURS (par le tuteur)
            $midTermScore = rand(12, 18);
            $midTermComments = [
                "Excellent travail, tr√®s motiv√© et impliqu√© dans les t√¢ches",
                "Bon niveau technique, continue sur cette voie",
                "Progr√®s remarquables depuis le d√©but du stage",
                "Tr√®s bonne int√©gration dans l'√©quipe de travail",
                "Travail de qualit√©, ponctuel et rigoureux dans l'ex√©cution",
                "Bonne compr√©hension des objectifs du stage",
                "Autonomie croissante dans la r√©alisation des t√¢ches",
                "Esprit d'√©quipe et communication efficace"
            ];
            
            if (in_array('assignment_id', $evalColumns)) {
                $stmt = $db->prepare("INSERT INTO evaluations (assignment_id, evaluator_id, evaluatee_id, type, score, comments) VALUES (?, ?, ?, ?, ?, ?)");
                $stmt->execute([$assignment['assignment_id'], $assignment['teacher_id'], $assignment['student_id'], 'mid_term', $midTermScore, $midTermComments[rand(0, count($midTermComments) - 1)]]);
            } else {
                $stmt = $db->prepare("INSERT INTO evaluations (evaluator_id, evaluatee_id, type, score, comments) VALUES (?, ?, ?, ?, ?)");
                $stmt->execute([$assignment['teacher_id'], $assignment['student_id'], 'mid_term', $midTermScore, $midTermComments[rand(0, count($midTermComments) - 1)]]);
            }
            $evaluationCount++;
            
            // 2. √âVALUATION FINALE (par le tuteur)
            $finalScore = rand(14, 20);
            $finalComments = [
                "Stage r√©ussi avec brio, objectifs largement atteints",
                "Excellente progression tout au long du stage",
                "Recommand√© pour un poste permanent dans l'entreprise",
                "Stage exemplaire, f√©licitations pour ce parcours",
                "Comp√©tences acquises remarquables, tr√®s bon potentiel",
                "Mission accomplie avec succ√®s et professionnalisme",
                "D√©passement des attentes, r√©sultats excellents",
                "Adaptation rapide et contribution significative √† l'√©quipe"
            ];
            
            if (in_array('assignment_id', $evalColumns)) {
                $stmt = $db->prepare("INSERT INTO evaluations (assignment_id, evaluator_id, evaluatee_id, type, score, comments) VALUES (?, ?, ?, ?, ?, ?)");
                $stmt->execute([$assignment['assignment_id'], $assignment['teacher_id'], $assignment['student_id'], 'final', $finalScore, $finalComments[rand(0, count($finalComments) - 1)]]);
            } else {
                $stmt = $db->prepare("INSERT INTO evaluations (evaluator_id, evaluatee_id, type, score, comments) VALUES (?, ?, ?, ?, ?)");
                $stmt->execute([$assignment['teacher_id'], $assignment['student_id'], 'final', $finalScore, $finalComments[rand(0, count($finalComments) - 1)]]);
            }
            $evaluationCount++;
            
            // 3. AUTO-√âVALUATION (par l'√©tudiant)
            $selfScore = rand(13, 17); // Les √©tudiants sont souvent plus modestes
            $selfComments = [
                "J'ai beaucoup appris durant ce stage, les objectifs ont √©t√© atteints",
                "Stage tr√®s enrichissant, j'ai pu d√©velopper mes comp√©tences techniques",
                "Excellente exp√©rience professionnelle, √©quipe tr√®s accueillante",
                "J'ai pu mettre en pratique mes connaissances th√©oriques",
                "Stage formateur qui m'a permis de gagner en autonomie",
                "Tr√®s satisfait de cette exp√©rience, recommande cette entreprise",
                "Apprentissage intensif, stage conforme √† mes attentes",
                "Bonne int√©gration dans l'√©quipe, missions vari√©es et int√©ressantes"
            ];
            
            if (in_array('assignment_id', $evalColumns)) {
                $stmt = $db->prepare("INSERT INTO evaluations (assignment_id, evaluator_id, evaluatee_id, type, score, comments) VALUES (?, ?, ?, ?, ?, ?)");
                $stmt->execute([$assignment['assignment_id'], $assignment['student_id'], $assignment['student_id'], 'student', $selfScore, $selfComments[rand(0, count($selfComments) - 1)]]);
            } else {
                $stmt = $db->prepare("INSERT INTO evaluations (evaluator_id, evaluatee_id, type, score, comments) VALUES (?, ?, ?, ?, ?)");
                $stmt->execute([$assignment['student_id'], $assignment['student_id'], 'student', $selfScore, $selfComments[rand(0, count($selfComments) - 1)]]);
            }
            $evaluationCount++;
        }
        
        logProgress("‚úÖ $evaluationCount √©valuations cr√©√©es (3 par √©tudiant affect√©)");
        
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è Evaluations: " . $e->getMessage());
    }
    
    // === 8. DOCUMENTS COMPLETS UPLOAD√âS PAR DIFF√âRENTS UTILISATEURS ===
    logProgress("üìÑ Cr√©ation des documents et fichiers (.md et .txt)...");
    
    // Cr√©er le dossier documents
    $docsDir = __DIR__ . '/uploads/documents/';
    if (!file_exists($docsDir)) {
        if (mkdir($docsDir, 0777, true)) {
            logProgress("‚úÖ Dossier cr√©√©: " . $docsDir);
        } else {
            logProgress("‚ùå Impossible de cr√©er le dossier: " . $docsDir);
        }
    } else {
        logProgress("‚úÖ Dossier existe: " . $docsDir);
    }
    
    $documentCount = 0;
    
    try {
        $stmt = $db->query("DESCRIBE documents");
        $docColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
        
        // Types de documents complets et innovants avec uploaders
        $docTypesWithUploaders = [
            // === DOCUMENTS √âTUDIANTS ===
            ['CV Professionnel', 'cv_professionnel', 'md', 'student'],
            ['Lettre de Motivation Personnalis√©e', 'lettre_motivation', 'md', 'student'],
            ['Portfolio Projets', 'portfolio', 'md', 'student'],
            ['Rapport de Stage D√©taill√©', 'rapport_stage', 'md', 'student'],
            ['Journal de Bord Hebdomadaire', 'journal_bord', 'md', 'student'],
            ['Auto-√©valuation des Comp√©tences', 'auto_evaluation', 'md', 'student'],
            ['Projet de Fin de Stage', 'projet_fin_stage', 'md', 'student'],
            ['M√©moire Technique', 'memoire_technique', 'md', 'student'],
            ['Pr√©sentation de Soutenance', 'presentation_soutenance', 'md', 'student'],
            ['Analyse Critique du Stage', 'analyse_critique', 'md', 'student'],
            
            // === DOCUMENTS TUTEURS ===
            ['Fiche d\'√âvaluation Mi-Parcours', 'eval_mi_parcours', 'md', 'teacher'],
            ['Fiche d\'√âvaluation Finale', 'eval_finale', 'md', 'teacher'],
            ['Grille de Comp√©tences Techniques', 'grille_competences', 'md', 'teacher'],
            ['Suivi P√©dagogique Mensuel', 'suivi_pedagogique', 'md', 'teacher'],
            ['Rapport de Visite Entreprise', 'visite_entreprise', 'md', 'teacher'],
            ['√âvaluation Comportementale', 'eval_comportementale', 'md', 'teacher'],
            ['Plan de Formation Individualis√©', 'plan_formation', 'md', 'teacher'],
            ['Bilan de Progression', 'bilan_progression', 'md', 'teacher'],
            ['Recommandations P√©dagogiques', 'recommandations', 'md', 'teacher'],
            
            // === DOCUMENTS ADMINISTRATIFS ===
            ['Convention de Stage Tripartite', 'convention_tripartite', 'md', 'admin'],
            ['Contrat de Stage Officiel', 'contrat_stage', 'md', 'admin'],
            ['Attestation de Stage Certifi√©e', 'attestation_certifiee', 'md', 'admin'],
            ['Certificat de Comp√©tences', 'certificat_competences', 'md', 'admin'],
            ['Fiche d\'Entreprise Partenaire', 'fiche_entreprise', 'md', 'admin'],
            ['Dossier d\'Inscription Stage', 'dossier_inscription', 'md', 'admin'],
            ['Autorisation Parentale', 'autorisation_parentale', 'md', 'admin'],
            ['Assurance Responsabilit√© Civile', 'assurance_rc', 'md', 'admin'],
            ['R√®glement Int√©rieur Stage', 'reglement_stage', 'md', 'admin'],
            
            // === DOCUMENTS COORDINATEURS ===
            ['Validation Acad√©mique', 'validation_academique', 'md', 'coordinator'],
            ['Suivi Administratif Global', 'suivi_global', 'md', 'coordinator'],
            ['Rapport de Coordination', 'rapport_coordination', 'md', 'coordinator'],
            ['Planning de Soutenances', 'planning_soutenances', 'md', 'coordinator'],
            ['Bilan Statistique Stages', 'bilan_statistique', 'md', 'coordinator'],
            
            // === DOCUMENTS ENTREPRISE (simul√©s par admin) ===
            ['Fiche de Poste D√©taill√©e', 'fiche_poste', 'md', 'admin'],
            ['√âvaluation Entreprise', 'eval_entreprise', 'md', 'admin'],
            ['Certificat de Travail', 'certificat_travail', 'md', 'admin'],
            ['Bilan des Missions', 'bilan_missions', 'md', 'admin'],
            ['Offre de Recrutement', 'offre_recrutement', 'md', 'admin']
        ];
        
        // R√©cup√©rer les affectations pour les documents (r√©utiliser la m√™me requ√™te)
        if (!isset($allAssignments) || empty($allAssignments)) {
            $stmt = $db->query("SELECT a.id as assignment_id, a.student_id, a.teacher_id, a.status FROM assignments a");
            $allAssignments = $stmt->fetchAll(PDO::FETCH_ASSOC);
        }
        
        logProgress("üìã G√©n√©ration documents pour " . count($allAssignments) . " affectations");
        
        // Cr√©er documents obligatoires + documents al√©atoires pour chaque affectation
        foreach ($allAssignments as $assignment) {
            logProgress("üìÑ G√©n√©ration documents pour affectation " . $assignment['assignment_id']);
            
            // === DOCUMENTS OBLIGATOIRES POUR CHAQUE √âTUDIANT ===
            $mandatoryDocs = [
                ['Convention de Stage Tripartite', 'convention_tripartite', 'md', 'admin'],
                ['Contrat de Stage Officiel', 'contrat_stage', 'md', 'admin'],
                ['Rapport de Stage D√©taill√©', 'rapport_stage', 'md', 'student'],
                ['Fiche d\'√âvaluation Finale', 'eval_finale', 'md', 'teacher'],
                ['Attestation de Stage Certifi√©e', 'attestation_certifiee', 'md', 'admin'],
                ['Certificat de Comp√©tences', 'certificat_competences', 'md', 'admin']
            ];
            
            // === DOCUMENTS AL√âATOIRES SUPPL√âMENTAIRES ===
            $additionalDocs = rand(6, 10);
            $selectedDocs = $mandatoryDocs;
            
            // Ajouter des documents al√©atoires
            for ($i = 0; $i < $additionalDocs; $i++) {
                $randomDoc = $docTypesWithUploaders[rand(0, count($docTypesWithUploaders) - 1)];
                $selectedDocs[] = $randomDoc;
            }
            
            foreach ($selectedDocs as $docInfo) {
                $docTitle = $docInfo[0];
                $docType = $docInfo[1];
                $extension = $docInfo[2];
                $uploaderRole = $docInfo[3];
                
                // D√©terminer qui a upload√© le document (user_id)
                $uploaderId = null;
                $uploaderName = '';
                
                switch ($uploaderRole) {
                    case 'student':
                        // R√©cup√©rer le user_id de l'√©tudiant
                        $stmt = $db->prepare("SELECT user_id FROM students WHERE id = ?");
                        $stmt->execute([$assignment['student_id']]);
                        $uploaderId = $stmt->fetchColumn();
                        $uploaderName = '√âtudiant';
                        break;
                    case 'teacher':
                        // R√©cup√©rer le user_id du tuteur
                        $stmt = $db->prepare("SELECT user_id FROM teachers WHERE id = ?");
                        $stmt->execute([$assignment['teacher_id']]);
                        $uploaderId = $stmt->fetchColumn();
                        $uploaderName = 'Tuteur';
                        break;
                    case 'admin':
                    case 'coordinator':
                        $uploaderId = $adminId; // L'admin user_id est d√©j√† correct
                        $uploaderName = ($uploaderRole == 'admin') ? 'Administrateur' : 'Coordinateur';
                        break;
                }
                
                if (!$uploaderId) {
                    logProgress("‚ö†Ô∏è Impossible de trouver user_id pour le r√¥le $uploaderRole");
                    continue;
                }
                
                $fileName = strtolower(str_replace([' ', '\'', '√†', '√©', '√®'], ['_', '', 'a', 'e', 'e'], $docTitle)) . '_' . $assignment['student_id'] . '_' . time() . '_' . rand(100, 999) . '.' . $extension;
                $filePath = $docsDir . $fileName;
                
                // === G√âN√âRATION DE CONTENU INNOVANT ET COMPLET ===
                $content = '';
                
                // En-t√™te commun pour tous les documents
                $content .= "# " . $docTitle . "\n\n";
                $content .= "---\n\n";
                $content .= "**üìã Informations du Document**\n\n";
                $content .= "- **√âtudiant:** ID " . $assignment['student_id'] . "\n";
                $content .= "- **Tuteur:** ID " . $assignment['teacher_id'] . "\n";
                $content .= "- **Upload√© par:** " . $uploaderName . "\n";
                $content .= "- **Date de cr√©ation:** " . date('Y-m-d H:i:s') . "\n";
                $content .= "- **Type:** " . $docType . "\n";
                $content .= "- **Statut:** ‚úÖ Valid√©\n\n";
                $content .= "---\n\n";
                
                // === CONTENU SP√âCIALIS√â PAR TYPE DE DOCUMENT ===
                switch ($docType) {
                    
                    // === DOCUMENTS √âTUDIANTS ===
                    case 'cv_professionnel':
                        $content .= "## üë§ CURRICULUM VITAE PROFESSIONNEL\n\n";
                        $content .= "### üéì Formation Acad√©mique\n\n";
                        $content .= "| Ann√©e | Dipl√¥me | √âtablissement | Mention |\n";
                        $content .= "|-------|---------|---------------|----------|\n";
                        $content .= "| 2024 | Master 2 Informatique | Universit√© Tech | Tr√®s Bien |\n";
                        $content .= "| 2022 | Master 1 Informatique | Universit√© Tech | Bien |\n";
                        $content .= "| 2021 | Licence Informatique | Universit√© Tech | Assez Bien |\n";
                        $content .= "| 2018 | Baccalaur√©at S | Lyc√©e Einstein | Mention Bien |\n\n";
                        $content .= "### üíº Exp√©rience Professionnelle\n\n";
                        $content .= "**Stage en cours** - " . date('Y') . "\n";
                        $content .= "- üè¢ Entreprise partenaire\n";
                        $content .= "- üéØ D√©veloppement d'applications m√©tier\n";
                        $content .= "- üîß Technologies: PHP, JavaScript, MySQL\n\n";
                        $content .= "**Projets Universitaires** - 2023\n";
                        $content .= "- üì± Application mobile de gestion\n";
                        $content .= "- üåê Site web e-commerce\n";
                        $content .= "- ü§ñ Bot de traitement automatique\n\n";
                        $content .= "### üõ†Ô∏è Comp√©tences Techniques\n\n";
                        $content .= "**Langages de programmation:**\n";
                        $content .= "- Java ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- Python ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- JavaScript ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- PHP ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- C++ ‚≠ê‚≠ê‚≠ê\n\n";
                        $content .= "**Frameworks & Technologies:**\n";
                        $content .= "- React/Vue.js ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- Node.js ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- Django/Flask ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- MySQL/PostgreSQL ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- Git/Docker ‚≠ê‚≠ê‚≠ê‚≠ê\n\n";
                        $content .= "### üó£Ô∏è Langues\n\n";
                        $content .= "- **Fran√ßais:** Langue maternelle\n";
                        $content .= "- **Anglais:** Niveau B2 (TOEIC 850)\n";
                        $content .= "- **Espagnol:** Niveau A2\n\n";
                        break;
                        
                    case 'rapport_stage':
                        $content .= "## üìä RAPPORT DE STAGE D√âTAILL√â\n\n";
                        $content .= "### üè¢ Pr√©sentation de l'Entreprise\n\n";
                        $content .= "**Nom:** Entreprise d'accueil\n";
                        $content .= "**Secteur:** " . ['Informatique', 'G√©nie Civil', '√âlectronique', 'M√©canique'][rand(0, 3)] . "\n";
                        $content .= "**Effectif:** " . rand(50, 500) . " employ√©s\n";
                        $content .= "**Chiffre d'affaires:** " . rand(5, 50) . "M‚Ç¨\n\n";
                        $content .= "### üéØ Missions et Objectifs\n\n";
                        $content .= "#### Mission principale\n";
                        $content .= "D√©veloppement d'une application de gestion int√©gr√©e pour optimiser les processus m√©tier.\n\n";
                        $content .= "#### Objectifs sp√©cifiques\n";
                        $content .= "1. **Analyse des besoins** - √âtude des processus existants\n";
                        $content .= "2. **Conception technique** - Architecture de la solution\n";
                        $content .= "3. **D√©veloppement** - Impl√©mentation des fonctionnalit√©s\n";
                        $content .= "4. **Tests et validation** - Assurance qualit√©\n";
                        $content .= "5. **Documentation** - Guide utilisateur et technique\n\n";
                        $content .= "### üìà R√©alisations\n\n";
                        $content .= "| Semaine | R√©alisation | Avancement |\n";
                        $content .= "|---------|-------------|------------|\n";
                        $content .= "| 1-2 | Analyse des besoins | 100% |\n";
                        $content .= "| 3-4 | Conception UML | 100% |\n";
                        $content .= "| 5-8 | D√©veloppement Backend | 95% |\n";
                        $content .= "| 9-10 | Interface utilisateur | 90% |\n";
                        $content .= "| 11-12 | Tests et d√©bogage | 85% |\n\n";
                        $content .= "### üß† Comp√©tences D√©velopp√©es\n\n";
                        $content .= "**Comp√©tences techniques:**\n";
                        $content .= "- Ma√Ætrise avanc√©e des frameworks modernes\n";
                        $content .= "- Optimisation de bases de donn√©es\n";
                        $content .= "- M√©thodologies de tests automatis√©s\n";
                        $content .= "- Int√©gration continue (CI/CD)\n\n";
                        $content .= "**Comp√©tences transversales:**\n";
                        $content .= "- Gestion de projet agile (Scrum)\n";
                        $content .= "- Communication client\n";
                        $content .= "- Travail en √©quipe multiculturelle\n";
                        $content .= "- R√©solution de probl√®mes complexes\n\n";
                        $content .= "### üéì Bilan et Perspectives\n\n";
                        $content .= "Ce stage a √©t√© une exp√©rience enrichissante qui m'a permis de consolider mes acquis th√©oriques et de d√©velopper une expertise pratique dans le domaine. Les d√©fis rencontr√©s ont stimul√© ma cr√©ativit√© et renforc√© ma motivation pour une carri√®re dans l'innovation technologique.\n\n";
                        $content .= "**Perspectives d'avenir:**\n";
                        $content .= "- Poursuite en th√®se CIFRE avec l'entreprise\n";
                        $content .= "- Sp√©cialisation en intelligence artificielle\n";
                        $content .= "- Cr√©ation d'une startup technologique\n\n";
                        break;
                        
                    case 'convention_tripartite':
                        $content .= "## üìÑ CONVENTION DE STAGE TRIPARTITE\n\n";
                        $content .= "### üìã Parties Contractantes\n\n";
                        $content .= "**üéì √âTABLISSEMENT D'ENSEIGNEMENT**\n";
                        $content .= "- Nom: Universit√© de Technologie\n";
                        $content .= "- Adresse: Campus Universitaire, 12345 Ville\n";
                        $content .= "- Repr√©sentant: Directeur des Stages\n";
                        $content .= "- T√©l√©phone: 01.23.45.67.89\n";
                        $content .= "- Email: stages@universite.fr\n\n";
                        $content .= "**üè¢ ENTREPRISE D'ACCUEIL**\n";
                        $content .= "- Nom: Entreprise Partenaire SARL\n";
                        $content .= "- Secteur: " . ['Informatique', 'G√©nie Civil', '√âlectronique'][rand(0, 2)] . "\n";
                        $content .= "- Siret: " . rand(10000000000000, 99999999999999) . "\n";
                        $content .= "- Adresse: Zone d'activit√©, 67890 Ville\n";
                        $content .= "- Ma√Ætre de stage: Responsable Technique\n\n";
                        $content .= "**üë§ √âTUDIANT STAGIAIRE**\n";
                        $content .= "- √âtudiant ID: " . $assignment['student_id'] . "\n";
                        $content .= "- Formation: Master " . ['Informatique', 'G√©nie Civil', '√âlectronique'][rand(0, 2)] . "\n";
                        $content .= "- Niveau: M2\n";
                        $content .= "- Tuteur p√©dagogique: ID " . $assignment['teacher_id'] . "\n\n";
                        $content .= "### üìÖ Modalit√©s du Stage\n\n";
                        $content .= "- **Dur√©e:** 12 semaines\n";
                        $content .= "- **D√©but:** " . date('Y-m-d', strtotime('+1 month')) . "\n";
                        $content .= "- **Fin:** " . date('Y-m-d', strtotime('+4 months')) . "\n";
                        $content .= "- **Horaires:** 35h/semaine, du lundi au vendredi\n";
                        $content .= "- **Gratification:** " . rand(400, 700) . "‚Ç¨/mois\n";
                        $content .= "- **Cong√©s:** 2,5 jours ouvrables par mois\n\n";
                        $content .= "### üéØ Objectifs P√©dagogiques\n\n";
                        $content .= "1. **Mise en pratique** des connaissances th√©oriques\n";
                        $content .= "2. **D√©couverte** du monde professionnel\n";
                        $content .= "3. **D√©veloppement** de comp√©tences transversales\n";
                        $content .= "4. **R√©alisation** d'un projet concret\n";
                        $content .= "5. **Pr√©paration** √† l'insertion professionnelle\n\n";
                        $content .= "### ‚öñÔ∏è Obligations des Parties\n\n";
                        $content .= "**Obligations de l'entreprise:**\n";
                        $content .= "- Accueillir l'√©tudiant dans de bonnes conditions\n";
                        $content .= "- D√©signer un ma√Ætre de stage comp√©tent\n";
                        $content .= "- Fournir les moyens n√©cessaires √† la mission\n";
                        $content .= "- Respecter la l√©gislation du travail\n\n";
                        $content .= "**Obligations de l'√©tudiant:**\n";
                        $content .= "- Respecter le r√®glement int√©rieur\n";
                        $content .= "- Faire preuve d'assiduit√© et de ponctualit√©\n";
                        $content .= "- Respecter la confidentialit√©\n";
                        $content .= "- R√©diger un rapport de stage\n\n";
                        $content .= "### ‚úçÔ∏è Signatures\n\n";
                        $content .= "**Universit√©:** _[Signature du Directeur]_ - Date: " . date('Y-m-d') . "\n\n";
                        $content .= "**Entreprise:** _[Signature du Responsable]_ - Date: " . date('Y-m-d') . "\n\n";
                        $content .= "**√âtudiant:** _[Signature de l'√©tudiant]_ - Date: " . date('Y-m-d') . "\n\n";
                        break;
                        
                    case 'eval_finale':
                        $content .= "## üìä FICHE D'√âVALUATION FINALE\n\n";
                        $content .= "### üìã Informations G√©n√©rales\n\n";
                        $content .= "- **P√©riode d'√©valuation:** " . date('Y-m-d', strtotime('-1 month')) . " au " . date('Y-m-d') . "\n";
                        $content .= "- **Dur√©e du stage:** 12 semaines\n";
                        $content .= "- **√âvaluateur:** Tuteur p√©dagogique (ID " . $assignment['teacher_id'] . ")\n\n";
                        $content .= "### üéØ Grille d'√âvaluation D√©taill√©e\n\n";
                        $content .= "| Crit√®re | Coefficient | Note /20 | Note Pond√©r√©e | Commentaire |\n";
                        $content .= "|---------|-------------|----------|---------------|-------------|\n";
                        $content .= "| **Comp√©tences Techniques** | 30% | " . rand(14, 18) . " | " . number_format(rand(14, 18) * 0.3, 1) . " | Excellent niveau |\n";
                        $content .= "| **Autonomie et Initiative** | 20% | " . rand(13, 17) . " | " . number_format(rand(13, 17) * 0.2, 1) . " | Progresse bien |\n";
                        $content .= "| **Communication** | 15% | " . rand(15, 19) . " | " . number_format(rand(15, 19) * 0.15, 1) . " | Tr√®s bonne |\n";
                        $content .= "| **Travail en √©quipe** | 15% | " . rand(16, 20) . " | " . number_format(rand(16, 20) * 0.15, 1) . " | Excellent |\n";
                        $content .= "| **Respect des d√©lais** | 10% | " . rand(17, 20) . " | " . number_format(rand(17, 20) * 0.1, 1) . " | Parfait |\n";
                        $content .= "| **Adaptation** | 10% | " . rand(14, 18) . " | " . number_format(rand(14, 18) * 0.1, 1) . " | Tr√®s bonne |\n\n";
                        $totalScore = rand(15, 18);
                        $content .= "**üèÜ NOTE GLOBALE: " . $totalScore . "/20**\n\n";
                        $content .= "### üìù √âvaluation Qualitative\n\n";
                        $content .= "#### Points Forts\n";
                        $content .= "- ‚úÖ Excellente ma√Ætrise des technologies utilis√©es\n";
                        $content .= "- ‚úÖ Capacit√© d'analyse et de synth√®se remarquable\n";
                        $content .= "- ‚úÖ Tr√®s bonne int√©gration dans l'√©quipe projet\n";
                        $content .= "- ‚úÖ Proactivit√© et force de proposition\n";
                        $content .= "- ‚úÖ Qualit√© de la documentation produite\n\n";
                        $content .= "#### Axes d'Am√©lioration\n";
                        $content .= "- üîÑ Approfondir les connaissances en architecture syst√®me\n";
                        $content .= "- üîÑ D√©velopper les comp√©tences en gestion de projet\n";
                        $content .= "- üîÑ Renforcer l'expression orale en public\n\n";
                        $content .= "#### Commentaires D√©taill√©s\n\n";
                        $content .= "L'√©tudiant a fait preuve d'un engagement exemplaire tout au long du stage. Sa progression technique est remarquable et son adaptation au contexte professionnel est excellente. Les objectifs p√©dagogiques sont largement atteints.\n\n";
                        $content .= "### üöÄ Perspectives\n\n";
                        if ($totalScore >= 16) {
                            $content .= "**Recommandation:** Poursuite en th√®se ou recrutement imm√©diat\n";
                            $content .= "**Potentiel:** Tr√®s √©lev√© pour des postes d'ing√©nieur senior\n";
                        } else {
                            $content .= "**Recommandation:** Poursuite d'√©tudes ou stage compl√©mentaire\n";
                            $content .= "**Potentiel:** Bon niveau pour des postes d'ing√©nieur junior\n";
                        }
                        $content .= "**Secteurs recommand√©s:** R&D, Innovation, Management technique\n\n";
                        break;
                        
                    case 'certificat_competences':
                        $content .= "## üèÜ CERTIFICAT DE COMP√âTENCES\n\n";
                        $content .= "### üéñÔ∏è Certification Officielle\n\n";
                        $content .= "**La Direction des √âtudes certifie que:**\n\n";
                        $content .= "L'√©tudiant r√©f√©renc√© ID " . $assignment['student_id'] . " a d√©montr√©, au cours de son stage pratique, la ma√Ætrise des comp√©tences suivantes:\n\n";
                        $content .= "### üíª Comp√©tences Techniques Certifi√©es\n\n";
                        $content .= "#### D√©veloppement Logiciel ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- Ma√Ætrise des langages: Java, Python, JavaScript\n";
                        $content .= "- Frameworks modernes: React, Spring, Django\n";
                        $content .= "- M√©thodologies: Agile, DevOps, TDD\n\n";
                        $content .= "#### Gestion de Donn√©es ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- Conception de bases de donn√©es relationnelles\n";
                        $content .= "- Optimisation de requ√™tes SQL avanc√©es\n";
                        $content .= "- Technologies NoSQL (MongoDB, Redis)\n\n";
                        $content .= "#### Architecture Syst√®me ‚≠ê‚≠ê‚≠ê‚≠ê\n";
                        $content .= "- Microservices et APIs REST\n";
                        $content .= "- Conteneurisation (Docker, Kubernetes)\n";
                        $content .= "- Services cloud (AWS, Azure)\n\n";
                        $content .= "### ü§ù Comp√©tences Transversales\n\n";
                        $content .= "| Comp√©tence | Niveau | Validation |\n";
                        $content .= "|------------|--------|------------|\n";
                        $content .= "| Leadership | Expert | ‚úÖ Certifi√© |\n";
                        $content .= "| Communication | Expert | ‚úÖ Certifi√© |\n";
                        $content .= "| Gestion de projet | Avanc√© | ‚úÖ Certifi√© |\n";
                        $content .= "| Innovation | Expert | ‚úÖ Certifi√© |\n";
                        $content .= "| Adaptabilit√© | Expert | ‚úÖ Certifi√© |\n\n";
                        $content .= "### üéØ Projets R√©alis√©s\n\n";
                        $content .= "1. **Syst√®me de gestion int√©gr√©** - D√©veloppement complet\n";
                        $content .= "2. **API de traitement de donn√©es** - Architecture microservices\n";
                        $content .= "3. **Interface utilisateur responsive** - UX/UI moderne\n";
                        $content .= "4. **Pipeline CI/CD** - Automatisation des d√©ploiements\n\n";
                        $content .= "### üìú Validation Officielle\n\n";
                        $content .= "**Date de certification:** " . date('Y-m-d') . "\n";
                        $content .= "**Num√©ro de certificat:** CERT-" . date('Y') . "-" . str_pad($assignment['student_id'], 4, '0', STR_PAD_LEFT) . "\n";
                        $content .= "**Validit√©:** 5 ans\n\n";
                        $content .= "**Signature √©lectronique:** _[Directeur des √âtudes]_\n";
                        $content .= "**Cachet de l'√©tablissement:** üèõÔ∏è Universit√© de Technologie\n\n";
                        break;
                        
                    case 'portfolio':
                        $content .= "## üé® PORTFOLIO PROJETS\n\n";
                        $content .= "### üöÄ Pr√©sentation\n\n";
                        $content .= "Ce portfolio pr√©sente les r√©alisations marquantes d√©velopp√©es durant le cursus universitaire et le stage professionnel.\n\n";
                        $content .= "### üíº Projets Universitaires\n\n";
                        $content .= "#### üì± Application Mobile \"EcoTrack\"\n";
                        $content .= "**Contexte:** Projet de fin d'√©tudes L3\n";
                        $content .= "**Objectif:** Application de suivi √©cologique personnel\n";
                        $content .= "**Technologies:** React Native, Node.js, MongoDB\n";
                        $content .= "**Fonctionnalit√©s:**\n";
                        $content .= "- Calcul d'empreinte carbone personnalis√©e\n";
                        $content .= "- Challenges √©cologiques gamifi√©s\n";
                        $content .= "- Communaut√© d'utilisateurs engag√©s\n";
                        $content .= "- G√©olocalisation des points de recyclage\n\n";
                        $content .= "**R√©sultats:** 1er prix du concours d'innovation √©tudiante\n\n";
                        $content .= "#### üåê Plateforme E-learning \"StudyMate\"\n";
                        $content .= "**Contexte:** Projet collectif M1\n";
                        $content .= "**Objectif:** Plateforme collaborative d'apprentissage\n";
                        $content .= "**Technologies:** Vue.js, Laravel, MySQL, Socket.io\n";
                        $content .= "**Fonctionnalit√©s:**\n";
                        $content .= "- Cours interactifs avec vid√©os\n";
                        $content .= "- Syst√®me de quiz adaptatifs\n";
                        $content .= "- Chat en temps r√©el\n";
                        $content .= "- Suivi de progression personnalis√©\n\n";
                        $content .= "#### ü§ñ Bot Intelligent \"AssistantPro\"\n";
                        $content .= "**Contexte:** Projet personnel\n";
                        $content .= "**Objectif:** Assistant virtuel pour professionnels\n";
                        $content .= "**Technologies:** Python, TensorFlow, NLP, Discord API\n";
                        $content .= "**Fonctionnalit√©s:**\n";
                        $content .= "- Traitement du langage naturel\n";
                        $content .= "- Planification automatique de r√©unions\n";
                        $content .= "- Analyse de sentiment des emails\n";
                        $content .= "- Int√©gration multi-plateforme\n\n";
                        $content .= "### üè¢ Projets de Stage\n\n";
                        $content .= "#### üèóÔ∏è Syst√®me de Gestion Int√©gr√©\n";
                        $content .= "**Mission principale du stage**\n";
                        $content .= "**Impact:** Optimisation de 40% des processus m√©tier\n";
                        $content .= "**Innovation:** Architecture microservices √©volutive\n\n";
                        $content .= "### üèÜ Reconnaissances\n\n";
                        $content .= "- ü•á **1er Prix** - Concours d'innovation √©tudiante 2023\n";
                        $content .= "- üèÖ **Mention Tr√®s Bien** - Projet de fin d'√©tudes\n";
                        $content .= "- üéñÔ∏è **Certification** - D√©veloppeur Full Stack\n";
                        $content .= "- üìú **Publication** - Article dans revue technique\n\n";
                        break;
                        
                    default:
                        // Contenu g√©n√©rique pour les autres types
                        $content .= "## üìã Document Professionnel\n\n";
                        $content .= "### üìÑ Contenu du Document\n\n";
                        $content .= "Ce document fait partie int√©grante du dossier de stage et contient les informations essentielles relatives au suivi p√©dagogique et administratif.\n\n";
                        $content .= "### ‚úÖ Validation\n\n";
                        $content .= "- **Statut:** Document valid√© et conforme\n";
                        $content .= "- **Conformit√©:** Respecte les standards qualit√©\n";
                        $content .= "- **Archivage:** Conservation r√©glementaire assur√©e\n\n";
                        break;
                }
                
                // Pied de page commun
                $content .= "\n---\n\n";
                $content .= "### üìû Contact et Informations\n\n";
                $content .= "- **Service des Stages:** stages@universite.fr\n";
                $content .= "- **Urgences:** 01.23.45.67.89\n";
                $content .= "- **Portal √©tudiant:** www.universite.fr/stages\n\n";
                $content .= "---\n\n";
                $content .= "*üîí Document confidentiel - Usage interne uniquement*\n\n";
                $content .= "*üìÖ G√©n√©r√© automatiquement le " . date('d/m/Y √† H:i') . "*\n\n";
                $content .= "*üèõÔ∏è Universit√© de Technologie - Syst√®me de Gestion des Stages*\n";
                
                file_put_contents($filePath, $content);
                
                // Ins√©rer en base - Structure correcte: user_id, assignment_id, type (enum)
                // D√©terminer le type enum bas√© sur le type de document
                $enumType = 'other'; // Par d√©faut
                if (strpos($docType, 'contrat') !== false || strpos($docType, 'convention') !== false) {
                    $enumType = 'contract';
                } elseif (strpos($docType, 'rapport') !== false) {
                    $enumType = 'report';
                } elseif (strpos($docType, 'eval') !== false) {
                    $enumType = 'evaluation';
                } elseif (strpos($docType, 'certificat') !== false || strpos($docType, 'attestation') !== false) {
                    $enumType = 'certificate';
                }
                
                try {
                    $stmt = $db->prepare("INSERT INTO documents (user_id, assignment_id, title, description, type, file_path, file_type, status, visibility) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)");
                    $stmt->execute([
                        $uploaderId, // user_id de celui qui upload
                        $assignment['assignment_id'],
                        $docTitle,
                        "Document g√©n√©r√© automatiquement pour l'√©tudiant ID " . $assignment['student_id'],
                        $enumType,
                        'uploads/documents/' . $fileName,
                        $extension, // file_type
                        'approved',
                        'private'
                    ]);
                } catch (Exception $insertError) {
                    logProgress("‚ö†Ô∏è Erreur insertion document: " . $insertError->getMessage());
                    continue;
                }
                $documentCount++;
            }
        }
        
        logProgress("‚úÖ $documentCount documents innovants cr√©√©s avec contenu d√©taill√© (.md)");
        
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è Documents: " . $e->getMessage());
    }
    
    // === 9. CONVERSATIONS ET MESSAGES INNOVANTS ===
    logProgress("üí¨ Cr√©ation des conversations r√©alistes et coh√©rentes...");
    
    try {
        $stmt = $db->query("DESCRIBE messages");
        $msgColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
        
        // V√©rifier si la table conversations existe
        $hasConversations = false;
        try {
            $stmt = $db->query("SHOW TABLES LIKE 'conversations'");
            $hasConversations = $stmt->rowCount() > 0;
        } catch (Exception $e) {
            // Table n'existe pas
        }
        
        $messageCount = 0;
        $conversationCount = 0;
        
        // === SC√âNARIOS DE CONVERSATIONS R√âALISTES ===
        $conversationScenarios = [
            // SC√âNARIO 1: Premi√®re prise de contact
            'first_contact' => [
                'teacher' => [
                    "Bonjour {student_name},\n\nJe suis {teacher_name}, votre tuteur pour ce stage. Je voulais prendre contact avec vous avant le d√©but de votre stage chez {company}.\n\nPouvez-vous me confirmer votre date de d√©but et me dire si vous avez des questions concernant l'organisation ?\n\nBien cordialement,\n{teacher_name}",
                    
                    "Parfait ! Je vous remercie pour ces informations.\n\nVoici quelques conseils pour bien d√©marrer :\n- Arrivez 10-15 minutes en avance le premier jour\n- Pr√©parez une liste de questions sur l'entreprise et vos missions\n- N'h√©sitez pas √† prendre des notes\n\nJe vous propose qu'on se voit apr√®s votre premi√®re semaine pour faire un point.\n\nBon courage !",
                    
                    "Excellent ! Je vois que vous √™tes bien pr√©par√©(e).\n\nPour notre suivi, je vous propose :\n- Un point hebdomadaire par email\n- Une visite en entreprise mi-parcours\n- Une r√©union avant la r√©daction du rapport\n\nEst-ce que ce planning vous convient ?"
                ],
                'student' => [
                    "Bonjour {teacher_name},\n\nMerci pour votre message. Je commence effectivement le {start_date} chez {company}.\n\nJ'ai d√©j√† eu un premier contact t√©l√©phonique avec mon ma√Ætre de stage, M./Mme {supervisor}. J'ai quelques questions sur les livrables attendus pour l'universit√©.\n\nPourrions-nous en discuter ?\n\nCordialement,\n{student_name}",
                    
                    "Merci beaucoup pour ces conseils pr√©cieux !\n\nJ'ai d√©j√† pr√©par√© :\n- Mon CV et lettre de motivation imprim√©s\n- Un carnet pour prendre des notes\n- Les documents administratifs demand√©s\n\nJe suis un peu stress√©(e) mais tr√®s motiv√©(e) ! Une r√©union apr√®s la premi√®re semaine serait parfaite.\n\n√Ä bient√¥t,\n{student_name}",
                    
                    "Ce planning me convient parfaitement.\n\nJe prendrai soin de vous envoyer un compte-rendu chaque vendredi.\n\nMerci pour votre accompagnement !\n\n{student_name}"
                ]
            ],
            
            // SC√âNARIO 2: Probl√®me technique
            'technical_issue' => [
                'student' => [
                    "Bonjour {teacher_name},\n\nJ'esp√®re que vous allez bien. Je rencontre une difficult√© technique sur mon projet actuel.\n\nJe travaille sur {technical_detail} et je bloque sur {problem_detail}. J'ai essay√© plusieurs approches mais sans succ√®s.\n\nAuriez-vous des pistes √† me sugg√©rer ?\n\nMerci d'avance,\n{student_name}",
                    
                    "Merci pour votre r√©ponse rapide !\n\nJ'ai essay√© votre suggestion et cela m'a permis d'avancer. Cependant, j'ai maintenant un nouveau probl√®me :\n{new_problem}\n\nJ'ai fait des recherches et je pense que {proposed_solution} pourrait fonctionner. Qu'en pensez-vous ?\n\nCordialement,\n{student_name}",
                    
                    "G√©nial ! √áa fonctionne maintenant !\n\nVotre aide m'a √©t√© tr√®s pr√©cieuse. J'ai document√© la solution pour m'en souvenir.\n\nJe peux maintenant continuer sur la suite du projet. Mon ma√Ætre de stage est impressionn√© par la rapidit√© de r√©solution.\n\nMerci encore !\n{student_name}"
                ],
                'teacher' => [
                    "Bonjour {student_name},\n\nJe comprends votre difficult√©. {technical_detail} peut effectivement √™tre complexe.\n\nVoici quelques pistes :\n1. Avez-vous v√©rifi√© {suggestion_1} ?\n2. Essayez {suggestion_2}\n3. La documentation officielle mentionne {suggestion_3}\n\nSi cela ne fonctionne pas, nous pouvons organiser une visio pour regarder ensemble.\n\nCourage !\n{teacher_name}",
                    
                    "Tr√®s bonne analyse !\n\nVotre proposition concernant {proposed_solution} est pertinente. Je vous sugg√®re de :\n- Faire un backup avant d'impl√©menter\n- Tester sur un environnement de d√©veloppement d'abord\n- Documenter vos changements\n\nCela d√©veloppe exactement les comp√©tences attendues dans votre formation.\n\nTenez-moi au courant !",
                    
                    "F√©licitations ! üéâ\n\nJe suis ravi que vous ayez r√©solu ce probl√®me. Votre d√©marche m√©thodique est exactement ce qu'on attend d'un bon d√©veloppeur.\n\nN'oubliez pas d'inclure cette exp√©rience dans votre rapport de stage, c'est un excellent exemple de r√©solution de probl√®me.\n\nContinuez ainsi !\n{teacher_name}"
                ]
            ],
            
            // SC√âNARIO 3: Suivi mi-parcours
            'midterm_review' => [
                'teacher' => [
                    "Bonjour {student_name},\n\nNous sommes √† mi-parcours de votre stage. Il est temps de faire un bilan.\n\nPouvez-vous me faire un retour sur :\n- Vos missions actuelles\n- Les comp√©tences que vous d√©veloppez\n- Les difficult√©s √©ventuelles\n- Votre int√©gration dans l'√©quipe\n\nJe suis disponible pour une visio cette semaine si vous pr√©f√©rez.\n\nBien cordialement,\n{teacher_name}",
                    
                    "Merci pour ce retour d√©taill√©.\n\nJe suis impressionn√© par {achievement}. Cela montre une vraie progression.\n\nConcernant {difficulty}, c'est normal √† ce stade. Voici mes conseils :\n{advice}\n\nPour la suite du stage, quels sont vos objectifs ?\n\nContinuez cet excellent travail !",
                    
                    "Parfait ! Vos objectifs sont clairs et atteignables.\n\nJe vais contacter votre ma√Ætre de stage pour avoir son retour √©galement.\n\nN'oubliez pas de commencer √† r√©fl√©chir √† votre rapport de stage. Je vous envoie le template par email s√©par√©.\n\n√Ä bient√¥t,\n{teacher_name}"
                ],
                'student' => [
                    "Bonjour {teacher_name},\n\nMerci pour votre message. Voici mon bilan √† mi-parcours :\n\n**Missions actuelles :**\n- {mission_1}\n- {mission_2}\n- {mission_3}\n\n**Comp√©tences d√©velopp√©es :**\n- {skill_1}\n- {skill_2}\n- {skill_3}\n\n**Difficult√©s :**\n- {difficulty} mais je commence √† mieux comprendre\n\n**Int√©gration :**\nTr√®s bonne ! L'√©quipe est bienveillante et j'ai un mentor qui m'aide beaucoup.\n\nUne visio serait super pour approfondir !\n\n{student_name}",
                    
                    "Merci pour vos encouragements et conseils !\n\n{achievement} a effectivement √©t√© un challenge int√©ressant. J'ai beaucoup appris.\n\nPour la suite, j'aimerais :\n1. Approfondir {skill_area}\n2. Participer √† {project_type}\n3. Peut-√™tre proposer {innovation}\n\nMon ma√Ætre de stage semble ouvert √† ces id√©es.\n\nQu'en pensez-vous ?\n\n{student_name}",
                    
                    "Super, merci !\n\nJ'attends le template avec impatience. J'ai d√©j√† commenc√© √† prendre des notes r√©guli√®res pour le rapport.\n\nMon ma√Ætre de stage a mentionn√© la possibilit√© d'une offre d'emploi apr√®s le stage. C'est motivant !\n\nJe vous tiens au courant de l'√©volution.\n\nBonne journ√©e,\n{student_name}"
                ]
            ],
            
            // SC√âNARIO 4: Pr√©paration du rapport
            'report_preparation' => [
                'student' => [
                    "Bonjour {teacher_name},\n\nJ'ai commenc√© la r√©daction de mon rapport de stage et j'aurais besoin de vos conseils.\n\nJ'ai structur√© mon rapport ainsi :\n1. Introduction\n2. Pr√©sentation de l'entreprise\n3. Missions r√©alis√©es\n4. Comp√©tences acquises\n5. Analyse critique\n6. Conclusion\n\nEst-ce que cette structure vous convient ? Avez-vous des recommandations sp√©cifiques ?\n\nMerci,\n{student_name}",
                    
                    "Merci pour ces pr√©cisions !\n\nJ'ai une question concernant la partie technique : jusqu'√† quel niveau de d√©tail dois-je aller ? \n\nPar exemple, pour {technical_project}, dois-je inclure :\n- Le code source ?\n- Les diagrammes d'architecture ?\n- Seulement une description fonctionnelle ?\n\nJe ne veux pas que ce soit trop technique ni trop superficiel.\n\n{student_name}",
                    
                    "Parfait, c'est tr√®s clair maintenant.\n\nJ'ai presque termin√© la premi√®re version. Pourrais-je vous l'envoyer pour une relecture d'ici la fin de la semaine ?\n\nJ'ai aussi pr√©par√© ma pr√©sentation PowerPoint pour la soutenance.\n\nMerci pour votre accompagnement tout au long de ce stage !\n\n{student_name}"
                ],
                'teacher' => [
                    "Bonjour {student_name},\n\nVotre structure est un bon point de d√©part. Je sugg√®re d'ajouter :\n\n- Une partie sur les apports du stage par rapport √† votre formation\n- Un chapitre sur les perspectives (professionnelles et personnelles)\n- Des annexes avec vos r√©alisations concr√®tes\n\nPensez √† :\n- Illustrer avec des captures d'√©cran/sch√©mas\n- Citer vos sources\n- Faire relire pour les fautes\n\nLe rapport doit faire entre 30 et 40 pages hors annexes.\n\nBon courage !",
                    
                    "Excellente question !\n\nPour la partie technique, visez un √©quilibre :\n\n‚úÖ √Ä inclure :\n- Diagrammes d'architecture (obligatoire)\n- Extraits de code comment√©s pour les parties cl√©s\n- Descriptions des choix techniques et justifications\n- Captures d'√©cran de l'application\n\n‚ùå √Ä √©viter :\n- Code source complet (mettre en annexe si n√©cessaire)\n- D√©tails d'impl√©mentation triviaux\n\nL'objectif est qu'un lecteur technique comprenne votre travail sans s'enliser dans les d√©tails.\n\n{teacher_name}",
                    
                    "Avec plaisir !\n\nEnvoyez-moi votre rapport d√®s qu'il est pr√™t. Je vous ferai un retour d√©taill√© sous 48h.\n\nPour la soutenance :\n- 20 minutes de pr√©sentation\n- 10 minutes de questions\n- Pr√©parez une d√©mo si possible\n\nJe suis fier du travail que vous avez accompli. Votre progression est remarquable !\n\n√Ä tr√®s bient√¥t pour la soutenance,\n{teacher_name}"
                ]
            ],
            
            // SC√âNARIO 5: Urgence/Probl√®me
            'urgent_issue' => [
                'student' => [
                    "URGENT - Bonjour {teacher_name},\n\nJ'ai un probl√®me urgent : {urgent_issue}.\n\nCela impacte {impact} et mon ma√Ætre de stage attend une solution rapidement.\n\nPuis-je vous appeler ?\n\n{student_name}",
                    
                    "Merci infiniment pour votre aide rapide !\n\nJ'ai appliqu√© vos conseils et la situation est maintenant sous contr√¥le.\n\n{resolution_detail}\n\nMon ma√Ætre de stage a appr√©ci√© la r√©activit√©.\n\n{student_name}",
                    
                    "Le√ßon apprise !\n\nJ'ai document√© l'incident et la solution pour l'√©quipe.\n\nCela m'a fait r√©aliser l'importance de {lesson_learned}.\n\nMerci encore pour votre disponibilit√©.\n\n{student_name}"
                ],
                'teacher' => [
                    "Bonjour {student_name},\n\nJe viens de voir votre message. Je suis disponible maintenant au {phone_number}.\n\nEn attendant, essayez de :\n1. {immediate_action_1}\n2. {immediate_action_2}\n3. Gardez votre calme, ces situations arrivent\n\nJ'attends votre appel.\n\n{teacher_name}",
                    
                    "Excellent travail sous pression !\n\nVotre gestion de cette crise montre votre professionnalisme.\n\nPour √©viter que cela se reproduise :\n- {prevention_tip_1}\n- {prevention_tip_2}\n- {prevention_tip_3}\n\nC'est en g√©rant ce type de situation qu'on progresse le plus.\n\nBravo !",
                    
                    "C'est exactement la bonne attitude !\n\nDocumenter les incidents et leurs r√©solutions est une excellente pratique professionnelle.\n\n{lesson_learned} est effectivement crucial dans notre m√©tier.\n\nJe noterai cette exp√©rience positivement dans mon √©valuation.\n\nContinuez ainsi !\n{teacher_name}"
                ]
            ]
        ];
        
        // === D√âTAILS TECHNIQUES PAR D√âPARTEMENT ===
        $technicalDetails = [
            'Informatique' => [
                'details' => ['une API REST', 'un syst√®me de cache Redis', 'une interface React', 'un pipeline CI/CD', 'une base de donn√©es PostgreSQL'],
                'problems' => ['probl√®me de CORS', 'fuite m√©moire', 'probl√®me de performance', 'erreur de d√©ploiement', 'conflit de merge Git'],
                'solutions' => ['configurer les headers CORS', 'utiliser un profiler', 'impl√©menter la pagination', 'v√©rifier les variables d\'environnement', 'faire un rebase interactif'],
                'missions' => ['D√©veloppement d\'une nouvelle fonctionnalit√©', 'Refactoring du code legacy', 'Mise en place de tests unitaires', 'Optimisation des performances', 'Documentation technique'],
                'skills' => ['React/Vue.js avanc√©', 'Architecture microservices', 'DevOps et conteneurisation', 'M√©thodologies Agile', 'Clean Code principles'],
                'achievements' => ['l\'impl√©mentation du syst√®me de notification temps r√©el', 'la r√©duction de 40% du temps de chargement', 'la mise en place de l\'int√©gration continue'],
                'urgent_issues' => ['le serveur de production est down', 'une faille de s√©curit√© a √©t√© d√©tect√©e', 'la base de donn√©es est corrompue'],
                'projects' => ['un hackathon interne', 'la refonte compl√®te de l\'architecture', 'un POC sur une nouvelle technologie']
            ],
            'G√©nie Civil' => [
                'details' => ['un calcul de structure', 'une mod√©lisation BIM', 'un planning de chantier', 'une √©tude g√©otechnique', 'un cahier des charges'],
                'problems' => ['erreur de calcul RDM', 'conflit dans le mod√®le 3D', 'retard de livraison mat√©riaux', 'non-conformit√© d√©tect√©e', 'probl√®me de coordination'],
                'solutions' => ['revoir les hypoth√®ses de calcul', 'utiliser la d√©tection de clashs', 'r√©organiser le planning', 'proposer une solution alternative', 'organiser une r√©union de coordination'],
                'missions' => ['Suivi de chantier hebdomadaire', 'Calculs de dimensionnement', 'R√©alisation de plans AutoCAD', 'Gestion des sous-traitants', 'Contr√¥le qualit√©'],
                'skills' => ['Ma√Ætrise d\'AutoCAD/Revit', 'Gestion de projet construction', 'Normes et r√©glementations', 'Lecture de plans techniques', 'Communication chantier'],
                'achievements' => ['la validation des plans par le bureau de contr√¥le', 'l\'optimisation du phasage chantier', 'la r√©solution d\'un probl√®me technique complexe'],
                'urgent_issues' => ['un probl√®me de s√©curit√© sur le chantier', 'une non-conformit√© majeure d√©tect√©e', 'un retard critique sur le planning'],
                'projects' => ['la certification environnementale', 'un nouveau proc√©d√© constructif', 'l\'am√©lioration de la s√©curit√© chantier']
            ],
            '√âlectronique' => [
                'details' => ['un circuit imprim√©', 'un programme embarqu√©', 'un protocole de communication', 'un syst√®me de capteurs', 'une carte de d√©veloppement'],
                'problems' => ['probl√®me de soudure', 'bug dans le firmware', 'interf√©rences √©lectromagn√©tiques', 'surchauffe du composant', 'probl√®me de timing'],
                'solutions' => ['refaire les soudures', 'debugger avec un analyseur logique', 'ajouter un blindage', 'revoir la dissipation thermique', 'ajuster les d√©lais'],
                'missions' => ['Conception de PCB', 'Programmation microcontr√¥leur', 'Tests et validation', 'R√©daction de documentation', 'Support production'],
                'skills' => ['Conception √©lectronique', 'Programmation C embarqu√©', 'Protocoles de communication', 'Instrumentation et mesure', 'Gestion de projet √©lectronique'],
                'achievements' => ['la miniaturisation du circuit de 30%', 'l\'am√©lioration de l\'autonomie batterie', 'la certification CE du produit'],
                'urgent_issues' => ['un lot de production d√©fectueux', 'un bug critique dans le firmware', 'une panne sur le banc de test'],
                'projects' => ['le d√©veloppement d\'un nouveau produit IoT', 'l\'am√©lioration du process de test', 'la migration vers une nouvelle plateforme']
            ],
            'M√©canique' => [
                'details' => ['une conception CAO', 'une simulation √©l√©ments finis', 'un processus de fabrication', 'un assemblage complexe', 'une gamme d\'usinage'],
                'problems' => ['contrainte d√©pass√©e en simulation', 'tol√©rance non respect√©e', 'probl√®me d\'assemblage', 'vibration excessive', 'usure pr√©matur√©e'],
                'solutions' => ['optimiser la g√©om√©trie', 'revoir les tol√©rances', 'modifier la s√©quence d\'assemblage', 'ajouter un amortisseur', 'changer le mat√©riau'],
                'missions' => ['Conception 3D SolidWorks', 'Calculs de r√©sistance', 'Suivi de fabrication', 'Tests et essais', 'Am√©lioration continue'],
                'skills' => ['CAO/DAO avanc√©', 'Simulation num√©rique', 'M√©trologie et contr√¥le', 'Gestion de production', 'Lean Manufacturing'],
                'achievements' => ['la r√©duction de 20% du co√ªt de fabrication', 'la validation du prototype', 'l\'am√©lioration de la fiabilit√©'],
                'urgent_issues' => ['une casse machine en production', 'un d√©faut critique sur une s√©rie', 'un probl√®me de s√©curit√© machine'],
                'projects' => ['l\'industrialisation d\'un nouveau produit', 'l\'optimisation de la cha√Æne de production', 'la mise en place du Lean']
            ],
            'Math√©matiques' => [
                'details' => ['un mod√®le statistique', 'un algorithme d\'optimisation', 'une analyse de donn√©es', 'un mod√®le pr√©dictif', 'une √©tude actuarielle'],
                'problems' => ['convergence de l\'algorithme', 'overfitting du mod√®le', 'donn√©es manquantes', 'r√©sultats incoh√©rents', 'complexit√© calculatoire'],
                'solutions' => ['ajuster les hyperparam√®tres', 'utiliser la r√©gularisation', 'impl√©menter une imputation', 'v√©rifier les hypoth√®ses', 'parall√©liser les calculs'],
                'missions' => ['D√©veloppement de mod√®les', 'Analyse statistique', 'Cr√©ation de dashboards', 'Recherche op√©rationnelle', 'R√©daction de rapports'],
                'skills' => ['Python/R avanc√©', 'Machine Learning', 'Statistiques avanc√©es', 'Visualisation de donn√©es', 'Communication scientifique'],
                'achievements' => ['l\'am√©lioration de 15% de la pr√©cision du mod√®le', 'l\'automatisation du reporting', 'la d√©couverte d\'insights business cl√©s'],
                'urgent_issues' => ['le mod√®le de production donne des r√©sultats aberrants', 'une deadline critique pour une analyse', 'une erreur dans les calculs financiers'],
                'projects' => ['un nouveau mod√®le de scoring', 'l\'optimisation des processus m√©tier', 'une √©tude d\'impact √©conomique']
            ]
        ];
        
        // G√©n√©rer les user_ids pour les messages
        $teacherUserIds = [];
        $studentUserIds = [];
        
        // R√©cup√©rer les user_ids des tuteurs
        foreach ($tutorIds as $tutorId) {
            $stmt = $db->prepare("SELECT user_id FROM teachers WHERE id = ?");
            $stmt->execute([$tutorId]);
            $userIdResult = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($userIdResult) {
                $teacherUserIds[$tutorId] = $userIdResult['user_id'];
            }
        }
        
        // R√©cup√©rer les user_ids des √©tudiants
        foreach ($studentIds as $studentId) {
            $stmt = $db->prepare("SELECT user_id FROM students WHERE id = ?");
            $stmt->execute([$studentId]);
            $userIdResult = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($userIdResult) {
                $studentUserIds[$studentId] = $userIdResult['user_id'];
            }
        }
        
        // === G√âN√âRER DES CONVERSATIONS POUR CHAQUE AFFECTATION ===
        foreach ($allAssignments as $assignment) {
            $teacherId = $assignment['teacher_id'];
            $studentId = $assignment['student_id'];
            
            // R√©cup√©rer les infos n√©cessaires
            $teacherUserId = $teacherUserIds[$teacherId] ?? null;
            $studentUserId = $studentUserIds[$studentId] ?? null;
            
            if (!$teacherUserId || !$studentUserId) {
                continue;
            }
            
            // D√©terminer le d√©partement de l'√©tudiant
            $stmt = $db->prepare("SELECT u.first_name, u.last_name, u.department FROM users u JOIN students s ON u.id = s.user_id WHERE s.id = ?");
            $stmt->execute([$studentId]);
            $studentInfo = $stmt->fetch(PDO::FETCH_ASSOC);
            
            $stmt = $db->prepare("SELECT first_name, last_name FROM users WHERE id = ?");
            $stmt->execute([$teacherUserId]);
            $teacherInfo = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if (!$studentInfo || !$teacherInfo) {
                continue;
            }
            
            $dept = $studentInfo['department'];
            $techDetails = $technicalDetails[$dept] ?? $technicalDetails['Informatique'];
            
            // Variables de remplacement
            $replacements = [
                '{student_name}' => $studentInfo['first_name'],
                '{teacher_name}' => $teacherInfo['first_name'] . ' ' . $teacherInfo['last_name'],
                '{company}' => 'TechCorp Solutions', // Pourrait √™tre am√©lior√© avec vraie entreprise
                '{start_date}' => date('d/m/Y', strtotime('+' . rand(1, 30) . ' days')),
                '{supervisor}' => ['Martin', 'Dubois', 'Laurent', 'Bernard'][rand(0, 3)],
                '{phone_number}' => '06 ' . rand(10, 99) . ' ' . rand(10, 99) . ' ' . rand(10, 99) . ' ' . rand(10, 99),
                '{technical_detail}' => $techDetails['details'][rand(0, count($techDetails['details']) - 1)],
                '{problem_detail}' => $techDetails['problems'][rand(0, count($techDetails['problems']) - 1)],
                '{new_problem}' => $techDetails['problems'][rand(0, count($techDetails['problems']) - 1)],
                '{proposed_solution}' => $techDetails['solutions'][rand(0, count($techDetails['solutions']) - 1)],
                '{suggestion_1}' => $techDetails['solutions'][rand(0, count($techDetails['solutions']) - 1)],
                '{suggestion_2}' => $techDetails['solutions'][rand(0, count($techDetails['solutions']) - 1)],
                '{suggestion_3}' => $techDetails['solutions'][rand(0, count($techDetails['solutions']) - 1)],
                '{mission_1}' => $techDetails['missions'][0],
                '{mission_2}' => $techDetails['missions'][1],
                '{mission_3}' => $techDetails['missions'][2],
                '{skill_1}' => $techDetails['skills'][0],
                '{skill_2}' => $techDetails['skills'][1],
                '{skill_3}' => $techDetails['skills'][2],
                '{skill_area}' => $techDetails['skills'][rand(0, count($techDetails['skills']) - 1)],
                '{achievement}' => $techDetails['achievements'][rand(0, count($techDetails['achievements']) - 1)],
                '{difficulty}' => $techDetails['problems'][rand(0, count($techDetails['problems']) - 1)],
                '{advice}' => "- " . implode("\n- ", array_slice($techDetails['solutions'], 0, 3)),
                '{project_type}' => $techDetails['projects'][rand(0, count($techDetails['projects']) - 1)],
                '{innovation}' => "une am√©lioration du processus de " . strtolower($techDetails['missions'][rand(0, count($techDetails['missions']) - 1)]),
                '{technical_project}' => $techDetails['details'][rand(0, count($techDetails['details']) - 1)],
                '{urgent_issue}' => $techDetails['urgent_issues'][rand(0, count($techDetails['urgent_issues']) - 1)],
                '{impact}' => "le projet en cours et la livraison client",
                '{immediate_action_1}' => "Faire un backup imm√©diat",
                '{immediate_action_2}' => "Identifier la source exacte du probl√®me",
                '{resolution_detail}' => "Le probl√®me venait de " . $techDetails['problems'][rand(0, count($techDetails['problems']) - 1)] . ". J'ai appliqu√© la solution et tout fonctionne maintenant.",
                '{lesson_learned}' => "toujours avoir un plan B et documenter les proc√©dures d'urgence",
                '{prevention_tip_1}' => "Mettre en place un monitoring",
                '{prevention_tip_2}' => "Faire des sauvegardes r√©guli√®res",
                '{prevention_tip_3}' => "Documenter les proc√©dures critiques"
            ];
            
            // Choisir 1-3 sc√©narios de conversation pour cette affectation
            $scenarioKeys = array_keys($conversationScenarios);
            $numScenarios = rand(1, 3);
            shuffle($scenarioKeys);
            $selectedScenarios = array_slice($scenarioKeys, 0, $numScenarios);
            
            // Pour chaque sc√©nario s√©lectionn√©
            foreach ($selectedScenarios as $scenarioKey) {
                $scenario = $conversationScenarios[$scenarioKey];
                
                // Cr√©er une conversation si la table existe
                $conversationId = null;
                if ($hasConversations) {
                    $conversationTitle = match($scenarioKey) {
                        'first_contact' => 'Premier contact - Stage',
                        'technical_issue' => 'Aide technique - ' . $replacements['{technical_detail}'],
                        'midterm_review' => 'Bilan mi-parcours',
                        'report_preparation' => 'Pr√©paration rapport de stage',
                        'urgent_issue' => 'URGENT - Assistance requise',
                        default => 'Discussion stage'
                    };
                    
                    $stmt = $db->prepare("INSERT INTO conversations (title, created_by, created_at) VALUES (?, ?, NOW())");
                    $stmt->execute([$conversationTitle, $teacherUserId]);
                    $conversationId = $db->lastInsertId();
                    
                    // Ajouter les participants
                    $stmt = $db->prepare("INSERT INTO conversation_participants (conversation_id, user_id) VALUES (?, ?), (?, ?)");
                    $stmt->execute([$conversationId, $teacherUserId, $conversationId, $studentUserId]);
                    
                    $conversationCount++;
                }
                
                // G√©n√©rer les messages de la conversation
                $messageDate = new DateTime();
                $messageDate->modify('-' . rand(5, 25) . ' days');
                
                // Alterner entre messages du tuteur et de l'√©tudiant
                $isTeacherFirst = ($scenarioKey == 'first_contact' || $scenarioKey == 'midterm_review');
                $teacherMessages = $scenario['teacher'];
                $studentMessages = $scenario['student'];
                
                for ($i = 0; $i < min(count($teacherMessages), count($studentMessages)); $i++) {
                    // Message 1 (tuteur ou √©tudiant selon le sc√©nario)
                    if ($isTeacherFirst) {
                        $message1 = str_replace(array_keys($replacements), array_values($replacements), $teacherMessages[$i]);
                        $sender1 = $teacherUserId;
                        $receiver1 = $studentUserId;
                        
                        $message2 = str_replace(array_keys($replacements), array_values($replacements), $studentMessages[$i]);
                        $sender2 = $studentUserId;
                        $receiver2 = $teacherUserId;
                    } else {
                        $message1 = str_replace(array_keys($replacements), array_values($replacements), $studentMessages[$i]);
                        $sender1 = $studentUserId;
                        $receiver1 = $teacherUserId;
                        
                        $message2 = str_replace(array_keys($replacements), array_values($replacements), $teacherMessages[$i]);
                        $sender2 = $teacherUserId;
                        $receiver2 = $studentUserId;
                    }
                    
                    // Ins√©rer le premier message - adapter aux colonnes existantes
                    $subject = match($scenarioKey) {
                        'first_contact' => 'Premier contact - D√©but de stage',
                        'technical_issue' => 'Question technique',
                        'midterm_review' => 'Bilan mi-parcours',
                        'report_preparation' => 'Rapport de stage',
                        'urgent_issue' => 'URGENT - Besoin d\'aide',
                        default => 'Suivi de stage'
                    };
                    
                    // Adapter la requ√™te selon les colonnes disponibles
                    if (in_array('sent_date', $msgColumns)) {
                        if (in_array('conversation_id', $msgColumns) && in_array('is_read', $msgColumns)) {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, sent_date, is_read, conversation_id) VALUES (?, ?, ?, ?, ?, ?, ?)");
                            $stmt->execute([$sender1, $receiver1, $subject, $message1, $messageDate->format('Y-m-d H:i:s'), 1, $conversationId]);
                        } else {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, sent_date) VALUES (?, ?, ?, ?, ?)");
                            $stmt->execute([$sender1, $receiver1, $subject, $message1, $messageDate->format('Y-m-d H:i:s')]);
                        }
                    } elseif (in_array('created_at', $msgColumns)) {
                        if (in_array('conversation_id', $msgColumns) && in_array('is_read', $msgColumns)) {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, created_at, is_read, conversation_id) VALUES (?, ?, ?, ?, ?, ?, ?)");
                            $stmt->execute([$sender1, $receiver1, $subject, $message1, $messageDate->format('Y-m-d H:i:s'), 1, $conversationId]);
                        } else {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, created_at) VALUES (?, ?, ?, ?, ?)");
                            $stmt->execute([$sender1, $receiver1, $subject, $message1, $messageDate->format('Y-m-d H:i:s')]);
                        }
                    } else {
                        // Version basique sans date
                        $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content) VALUES (?, ?, ?, ?)");
                        $stmt->execute([$sender1, $receiver1, $subject, $message1]);
                    }
                    $messageCount++;
                    
                    // Attendre quelques heures/jours
                    $messageDate->modify('+' . rand(2, 24) . ' hours');
                    
                    // Ins√©rer la r√©ponse avec la m√™me logique
                    if (in_array('sent_date', $msgColumns)) {
                        if (in_array('conversation_id', $msgColumns) && in_array('is_read', $msgColumns)) {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, sent_date, is_read, conversation_id) VALUES (?, ?, ?, ?, ?, ?, ?)");
                            $stmt->execute([$sender2, $receiver2, 'Re: ' . $subject, $message2, $messageDate->format('Y-m-d H:i:s'), rand(0, 1), $conversationId]);
                        } else {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, sent_date) VALUES (?, ?, ?, ?, ?)");
                            $stmt->execute([$sender2, $receiver2, 'Re: ' . $subject, $message2, $messageDate->format('Y-m-d H:i:s')]);
                        }
                    } elseif (in_array('created_at', $msgColumns)) {
                        if (in_array('conversation_id', $msgColumns) && in_array('is_read', $msgColumns)) {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, created_at, is_read, conversation_id) VALUES (?, ?, ?, ?, ?, ?, ?)");
                            $stmt->execute([$sender2, $receiver2, 'Re: ' . $subject, $message2, $messageDate->format('Y-m-d H:i:s'), rand(0, 1), $conversationId]);
                        } else {
                            $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, created_at) VALUES (?, ?, ?, ?, ?)");
                            $stmt->execute([$sender2, $receiver2, 'Re: ' . $subject, $message2, $messageDate->format('Y-m-d H:i:s')]);
                        }
                    } else {
                        // Version basique sans date
                        $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content) VALUES (?, ?, ?, ?)");
                        $stmt->execute([$sender2, $receiver2, 'Re: ' . $subject, $message2]);
                    }
                    $messageCount++;
                    
                    // Attendre avant le prochain √©change
                    $messageDate->modify('+' . rand(1, 3) . ' days');
                }
            }
        }
        
        // === AJOUTER QUELQUES MESSAGES ADMINISTRATIFS ===
        $adminMessages = [
            [
                'subject' => 'üì¢ Rappel - Documents de stage',
                'content' => "Bonjour √† tous,\n\nJe vous rappelle que les documents suivants doivent √™tre t√©l√©vers√©s avant le d√©but de votre stage :\n\n‚úÖ Convention de stage sign√©e\n‚úÖ Attestation d'assurance\n‚úÖ Fiche d'information entreprise\n\nMerci de respecter ces d√©lais pour √©viter tout retard administratif.\n\nCordialement,\nLe service des stages"
            ],
            [
                'subject' => 'üéì Soutenance de stage - Informations importantes',
                'content' => "Chers √©tudiants,\n\nLes soutenances de stage auront lieu du 15 au 30 septembre.\n\nüìã **√Ä pr√©parer :**\n- Rapport de stage (30-40 pages)\n- Pr√©sentation PowerPoint (20 min)\n- Poster r√©capitulatif (optionnel)\n\nüìÖ **Calendrier :**\n- D√©p√¥t du rapport : 1 semaine avant la soutenance\n- Dur√©e : 20 min pr√©sentation + 10 min questions\n\nüí° **Conseils :**\n- Structurez bien votre pr√©sentation\n- Pr√©parez une d√©mo si pertinent\n- Anticipez les questions du jury\n\nBonne pr√©paration !\nLa direction des √©tudes"
            ],
            [
                'subject' => 'üèÜ F√©licitations - √âvaluation de stage',
                'content' => "Bonjour,\n\nJ'ai le plaisir de vous informer que votre √©valuation de stage est excellente !\n\nVotre ma√Ætre de stage a particuli√®rement appr√©ci√© :\n- Votre professionnalisme\n- Votre capacit√© d'adaptation\n- La qualit√© de votre travail\n- Votre esprit d'√©quipe\n\nCette √©valuation positive sera un atout pour votre dossier.\n\nContinuez ainsi !\n\nCordialement,\nVotre tuteur acad√©mique"
            ]
        ];
        
        // Envoyer quelques messages admin √† des √©tudiants al√©atoires
        foreach ($adminMessages as $adminMsg) {
            $randomStudents = array_rand($studentUserIds, min(5, count($studentUserIds)));
            if (!is_array($randomStudents)) {
                $randomStudents = [$randomStudents];
            }
            
            foreach ($randomStudents as $studentId) {
                // Adapter selon les colonnes disponibles
                if (in_array('sent_date', $msgColumns) && in_array('is_read', $msgColumns)) {
                    $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, sent_date, is_read) VALUES (?, ?, ?, ?, ?, ?)");
                    $stmt->execute([
                        $adminId,
                        $studentUserIds[$studentId],
                        $adminMsg['subject'],
                        $adminMsg['content'],
                        date('Y-m-d H:i:s', strtotime('-' . rand(1, 20) . ' days')),
                        rand(0, 1)
                    ]);
                } elseif (in_array('created_at', $msgColumns) && in_array('is_read', $msgColumns)) {
                    $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, created_at, is_read) VALUES (?, ?, ?, ?, ?, ?)");
                    $stmt->execute([
                        $adminId,
                        $studentUserIds[$studentId],
                        $adminMsg['subject'],
                        $adminMsg['content'],
                        date('Y-m-d H:i:s', strtotime('-' . rand(1, 20) . ' days')),
                        rand(0, 1)
                    ]);
                } elseif (in_array('sent_date', $msgColumns)) {
                    $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, sent_date) VALUES (?, ?, ?, ?, ?)");
                    $stmt->execute([
                        $adminId,
                        $studentUserIds[$studentId],
                        $adminMsg['subject'],
                        $adminMsg['content'],
                        date('Y-m-d H:i:s', strtotime('-' . rand(1, 20) . ' days'))
                    ]);
                } elseif (in_array('created_at', $msgColumns)) {
                    $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content, created_at) VALUES (?, ?, ?, ?, ?)");
                    $stmt->execute([
                        $adminId,
                        $studentUserIds[$studentId],
                        $adminMsg['subject'],
                        $adminMsg['content'],
                        date('Y-m-d H:i:s', strtotime('-' . rand(1, 20) . ' days'))
                    ]);
                } else {
                    // Version basique
                    $stmt = $db->prepare("INSERT INTO messages (sender_id, receiver_id, subject, content) VALUES (?, ?, ?, ?)");
                    $stmt->execute([
                        $adminId,
                        $studentUserIds[$studentId],
                        $adminMsg['subject'],
                        $adminMsg['content']
                    ]);
                }
                $messageCount++;
            }
        }
        
        logProgress("‚úÖ $messageCount messages cr√©√©s dans $conversationCount conversations");
        
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è Messages: " . $e->getMessage());
    }
    
    // === 10. √âVALUATIONS COMPL√àTES ET INNOVANTES ===
    logProgress("üìä Cr√©ation des √©valuations compl√®tes avec scores d√©taill√©s...");
    
    try {
        // V√©rifier la structure de la table evaluations
        $stmt = $db->query("DESCRIBE evaluations");
        $evalColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
        
        logProgress("üîç Colonnes table evaluations: " . implode(", ", $evalColumns));
        
        // D√©finir les colonnes de base et optionnelles
        $baseColumns = ['assignment_id', 'evaluator_id', 'evaluatee_id', 'type', 'score'];
        $optionalColumns = [
            'feedback' => 'text',
            'strengths' => 'text', 
            'areas_to_improve' => 'text',
            'weaknesses' => 'text',
            'comments' => 'text',
            'notes' => 'text',
            'status' => 'varchar',
            'criteria_scores' => 'json',
            'submission_date' => 'datetime',
            'created_at' => 'datetime',
            'updated_at' => 'datetime'
        ];
        
        // Identifier les colonnes texte disponibles pour le feedback
        $feedbackColumn = null;
        $strengthsColumn = null;
        $improvementsColumn = null;
        
        if (in_array('feedback', $evalColumns)) {
            $feedbackColumn = 'feedback';
        } elseif (in_array('comments', $evalColumns)) {
            $feedbackColumn = 'comments';
        } elseif (in_array('notes', $evalColumns)) {
            $feedbackColumn = 'notes';
        }
        
        if (in_array('strengths', $evalColumns)) {
            $strengthsColumn = 'strengths';
        } elseif (in_array('strong_points', $evalColumns)) {
            $strengthsColumn = 'strong_points';
        }
        
        if (in_array('areas_to_improve', $evalColumns)) {
            $improvementsColumn = 'areas_to_improve';
        } elseif (in_array('weaknesses', $evalColumns)) {
            $improvementsColumn = 'weaknesses';
        } elseif (in_array('improvements', $evalColumns)) {
            $improvementsColumn = 'improvements';
        }
        
        logProgress("üîç Colonnes mapp√©es - Feedback: " . ($feedbackColumn ?? 'NONE') . 
                   ", Strengths: " . ($strengthsColumn ?? 'NONE') . 
                   ", Improvements: " . ($improvementsColumn ?? 'NONE'));
        
        $evaluationCount = 0;
        
        // === CRIT√àRES D'√âVALUATION D√âTAILL√âS ===
        $criteriaStructure = [
            // Crit√®res techniques
            'technical_mastery' => [
                'name' => 'Ma√Ætrise des technologies',
                'category' => 'technical',
                'description' => 'Capacit√© √† utiliser les technologies et outils li√©s au stage',
                'weight' => 1.2
            ],
            'work_quality' => [
                'name' => 'Qualit√© du travail',
                'category' => 'technical', 
                'description' => 'Pr√©cision, clart√© et fiabilit√© des livrables produits',
                'weight' => 1.3
            ],
            'problem_solving' => [
                'name' => 'R√©solution de probl√®mes',
                'category' => 'technical',
                'description' => 'Capacit√© √† analyser et r√©soudre des probl√®mes techniques',
                'weight' => 1.4
            ],
            'documentation' => [
                'name' => 'Documentation',
                'category' => 'technical',
                'description' => 'Qualit√© de la documentation produite et des commentaires',
                'weight' => 1.0
            ],
            
            // Crit√®res professionnels
            'autonomy' => [
                'name' => 'Autonomie',
                'category' => 'professional',
                'description' => 'Capacit√© √† travailler de mani√®re ind√©pendante',
                'weight' => 1.2
            ],
            'communication' => [
                'name' => 'Communication',
                'category' => 'professional',
                'description' => 'Clart√© et efficacit√© de la communication √©crite et orale',
                'weight' => 1.3
            ],
            'team_integration' => [
                'name' => 'Int√©gration dans l\'√©quipe',
                'category' => 'professional',
                'description' => 'Collaboration et interactions avec les membres de l\'√©quipe',
                'weight' => 1.1
            ],
            'deadline_respect' => [
                'name' => 'Respect des d√©lais',
                'category' => 'professional',
                'description' => 'Ponctualit√© et respect des √©ch√©ances fix√©es',
                'weight' => 1.2
            ],
            
            // Crit√®res personnels
            'initiative' => [
                'name' => 'Prise d\'initiative',
                'category' => 'personal',
                'description' => 'Capacit√© √† proposer des am√©liorations et innovations',
                'weight' => 1.1
            ],
            'adaptability' => [
                'name' => 'Adaptabilit√©',
                'category' => 'personal',
                'description' => 'Capacit√© √† s\'adapter aux changements et nouvelles situations',
                'weight' => 1.0
            ]
        ];
        
        // === TYPES D'√âVALUATIONS ===
        $evaluationTypes = [
            'mid_term' => [
                'name' => '√âvaluation mi-parcours',
                'weight' => 0.4,
                'typical_score_range' => [2.5, 4.2],
                'status_options' => ['draft', 'submitted', 'validated']
            ],
            'final' => [
                'name' => '√âvaluation finale',
                'weight' => 0.6,
                'typical_score_range' => [3.0, 4.8],
                'status_options' => ['submitted', 'validated', 'approved']
            ],
            'student' => [
                'name' => 'Auto-√©valuation √©tudiant',
                'weight' => 0.2,
                'typical_score_range' => [3.2, 4.5],
                'status_options' => ['draft', 'submitted']
            ],
            'company' => [
                'name' => '√âvaluation entreprise',
                'weight' => 0.3,
                'typical_score_range' => [3.0, 4.6],
                'status_options' => ['pending', 'submitted', 'validated']
            ]
        ];
        
        // === D√âPARTEMENTS SP√âCIALIS√âS AVEC CRIT√àRES SP√âCIFIQUES ===
        $departmentSpecifics = [
            'Informatique' => [
                'bonus_criteria' => ['code_review', 'version_control', 'testing'],
                'common_strengths' => [
                    'Ma√Ætrise des langages de programmation',
                    'Compr√©hension des architectures logicielles',
                    'Capacit√© d\'apprentissage des nouvelles technologies',
                    'R√©solution cr√©ative des probl√®mes techniques'
                ],
                'common_improvements' => [
                    'Documentation du code plus d√©taill√©e',
                    'Tests unitaires plus complets', 
                    'Communication technique avec les non-d√©veloppeurs',
                    'Estimation des temps de d√©veloppement'
                ]
            ],
            'G√©nie Civil' => [
                'bonus_criteria' => ['safety_awareness', 'regulation_compliance', 'site_management'],
                'common_strengths' => [
                    'Respect des normes de s√©curit√©',
                    'Pr√©cision dans les calculs techniques',
                    'Compr√©hension des mat√©riaux et structures',
                    'Vision spatiale et lecture de plans'
                ],
                'common_improvements' => [
                    'Gestion des impr√©vus sur chantier',
                    'Communication avec les √©quipes terrain',
                    'Optimisation des co√ªts',
                    'Veille r√©glementaire'
                ]
            ],
            '√âlectronique' => [
                'bonus_criteria' => ['circuit_design', 'signal_processing', 'embedded_systems'],
                'common_strengths' => [
                    'Analyse des circuits √©lectroniques',
                    'Ma√Ætrise des outils de simulation',
                    'Compr√©hension des protocoles de communication',
                    'Pr√©cision dans les mesures'
                ],
                'common_improvements' => [
                    'Optimisation √©nerg√©tique des syst√®mes',
                    'Int√©gration hardware-software',
                    'Documentation technique standardis√©e',
                    'D√©bogage des syst√®mes complexes'
                ]
            ],
            'M√©canique' => [
                'bonus_criteria' => ['cad_mastery', 'manufacturing_process', 'quality_control'],
                'common_strengths' => [
                    'Conception assist√©e par ordinateur',
                    'Compr√©hension des proc√©d√©s de fabrication',
                    'Analyse des contraintes m√©caniques',
                    'Respect des tol√©rances dimensionnelles'
                ],
                'common_improvements' => [
                    'Optimisation des processus de production',
                    'Innovation dans les mat√©riaux',
                    'Maintenance pr√©dictive',
                    'Lean manufacturing'
                ]
            ],
            'Math√©matiques' => [
                'bonus_criteria' => ['statistical_analysis', 'modeling', 'data_interpretation'],
                'common_strengths' => [
                    'Mod√©lisation math√©matique avanc√©e',
                    'Analyse statistique rigoureuse',
                    'R√©solution de probl√®mes complexes',
                    'Utilisation d\'outils de calcul scientifique'
                ],
                'common_improvements' => [
                    'Vulgarisation des concepts math√©matiques',
                    'Applications pratiques des mod√®les',
                    'Visualisation des donn√©es',
                    'Communication des r√©sultats'
                ]
            ]
        ];
        
        // === G√âN√âRER DES √âVALUATIONS POUR CHAQUE AFFECTATION ===
        foreach ($allAssignments as $assignment) {
            $assignmentId = $assignment['assignment_id'];
            $studentId = $assignment['student_id'];
            $teacherId = $assignment['teacher_id'];
            
            // R√©cup√©rer les informations de l'√©tudiant et du d√©partement
            $stmt = $db->prepare("SELECT u.first_name, u.last_name, u.department FROM users u JOIN students s ON u.id = s.user_id WHERE s.id = ?");
            $stmt->execute([$studentId]);
            $studentInfo = $stmt->fetch(PDO::FETCH_ASSOC);
            
            $stmt = $db->prepare("SELECT user_id FROM teachers WHERE id = ?");
            $stmt->execute([$teacherId]);
            $teacherUserId = $stmt->fetchColumn();
            
            $stmt = $db->prepare("SELECT user_id FROM students WHERE id = ?");
            $stmt->execute([$studentId]);
            $studentUserId = $stmt->fetchColumn();
            
            if (!$studentInfo || !$teacherUserId || !$studentUserId) {
                continue;
            }
            
            $department = $studentInfo['department'];
            $deptSpecs = $departmentSpecifics[$department] ?? $departmentSpecifics['Informatique'];
            
            // === CR√âER DIFF√âRENTS TYPES D'√âVALUATIONS ===
            
            // 1. √âVALUATION MI-PARCOURS PAR LE TUTEUR
            if (rand(1, 100) <= 85) { // 85% ont une √©valuation mi-parcours
                $midTermScores = [];
                $totalWeightedScore = 0;
                $totalWeight = 0;
                
                foreach ($criteriaStructure as $key => $criteria) {
                    // Score bas√© sur la courbe normale centr√©e sur 3.5
                    $baseScore = max(1, min(5, rand(250, 450) / 100));
                    
                    // Ajustement selon le d√©partement
                    if ($criteria['category'] === 'technical' && in_array($department, ['Informatique', '√âlectronique'])) {
                        $baseScore += rand(-20, 30) / 100;
                    }
                    
                    $score = round(max(1, min(5, $baseScore)), 1);
                    $midTermScores[$key] = $score;
                    $totalWeightedScore += $score * $criteria['weight'];
                    $totalWeight += $criteria['weight'];
                }
                
                $overallScore = round($totalWeightedScore / $totalWeight, 1);
                
                $strengths = implode("\n‚Ä¢ ", array_slice($deptSpecs['common_strengths'], 0, rand(2, 3)));
                $improvements = implode("\n‚Ä¢ ", array_slice($deptSpecs['common_improvements'], 0, rand(2, 3)));
                
                $feedback = "√âVALUATION MI-PARCOURS - " . $studentInfo['first_name'] . " " . $studentInfo['last_name'] . "\n\n";
                $feedback .= "L'√©tudiant(e) d√©montre une progression satisfaisante dans son apprentissage. ";
                $feedback .= ($overallScore >= 4.0) ? "Les comp√©tences techniques se d√©veloppent de mani√®re tr√®s positive. " : 
                            (($overallScore >= 3.0) ? "Les comp√©tences techniques √©voluent de fa√ßon correcte avec des axes d'am√©lioration identifi√©s. " : 
                            "Des efforts suppl√©mentaires sont n√©cessaires pour atteindre les objectifs. ");
                $feedback .= "L'int√©gration dans l'√©quipe est " . (rand(1, 10) > 3 ? "r√©ussie" : "en cours") . ". ";
                $feedback .= "Points sp√©cifiques au d√©partement " . $department . " : ma√Ætrise des outils techniques adapt√©e au niveau attendu.";
                
                $status = $evaluationTypes['mid_term']['status_options'][rand(0, count($evaluationTypes['mid_term']['status_options']) - 1)];
                
                // Construire la requ√™te d'insertion adapt√©e aux colonnes disponibles
                $insertColumns = ['assignment_id', 'evaluator_id', 'evaluatee_id', 'type', 'score'];
                $insertValues = [$assignmentId, $teacherUserId, $studentUserId, 'mid_term', $overallScore];
                
                // Ajouter les colonnes de feedback si elles existent
                if ($feedbackColumn) {
                    $insertColumns[] = $feedbackColumn;
                    $insertValues[] = $feedback;
                }
                
                if ($strengthsColumn) {
                    $insertColumns[] = $strengthsColumn;
                    $insertValues[] = $strengths;
                }
                
                if ($improvementsColumn) {
                    $insertColumns[] = $improvementsColumn;
                    $insertValues[] = $improvements;
                }
                
                // Ajouter colonnes optionnelles si elles existent
                if (in_array('status', $evalColumns)) {
                    $insertColumns[] = 'status';
                    $insertValues[] = $status;
                }
                
                if (in_array('criteria_scores', $evalColumns)) {
                    $insertColumns[] = 'criteria_scores';
                    $insertValues[] = json_encode($midTermScores);
                }
                
                if (in_array('submission_date', $evalColumns)) {
                    $insertColumns[] = 'submission_date';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(10, 45) . ' days'));
                } elseif (in_array('created_at', $evalColumns)) {
                    $insertColumns[] = 'created_at';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(10, 45) . ' days'));
                }
                
                $insertPlaceholders = array_fill(0, count($insertColumns), '?');
                
                $sql = "INSERT INTO evaluations (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $insertPlaceholders) . ")";
                $stmt = $db->prepare($sql);
                $stmt->execute($insertValues);
                $evaluationCount++;
            }
            
            // 2. AUTO-√âVALUATION DE L'√âTUDIANT
            if (rand(1, 100) <= 70) { // 70% font une auto-√©valuation
                $selfScores = [];
                $totalWeightedScore = 0;
                $totalWeight = 0;
                
                foreach ($criteriaStructure as $key => $criteria) {
                    // Les √©tudiants s'auto-√©valuent g√©n√©ralement un peu plus positivement
                    $baseScore = max(1, min(5, rand(320, 480) / 100));
                    $score = round(max(1, min(5, $baseScore)), 1);
                    $selfScores[$key] = $score;
                    $totalWeightedScore += $score * $criteria['weight'];
                    $totalWeight += $criteria['weight'];
                }
                
                $overallScore = round($totalWeightedScore / $totalWeight, 1);
                
                $feedback = "AUTO-√âVALUATION - Bilan personnel de mon stage\n\n";
                $feedback .= "Je pense avoir bien progress√© durant ce stage. J'ai acquis de nouvelles comp√©tences en " . strtolower($department) . " et j'ai pu contribuer aux projets de l'√©quipe. ";
                $feedback .= ($overallScore >= 4.0) ? "Je suis satisfait(e) de mes performances et de mon apprentissage. " : 
                            "Je dois encore am√©liorer certains aspects techniques mais je progresse. ";
                $feedback .= "L'environnement de travail √©tait stimulant et j'ai appr√©ci√© l'encadrement re√ßu.";
                
                $strengths = "Motivation et implication forte\n‚Ä¢ " . $deptSpecs['common_strengths'][rand(0, count($deptSpecs['common_strengths']) - 1)];
                $improvements = "Organisation personnelle\n‚Ä¢ " . $deptSpecs['common_improvements'][rand(0, count($deptSpecs['common_improvements']) - 1)];
                
                $status = $evaluationTypes['student']['status_options'][rand(0, count($evaluationTypes['student']['status_options']) - 1)];
                
                $insertColumns = ['assignment_id', 'evaluator_id', 'evaluatee_id', 'type', 'score'];
                $insertValues = [$assignmentId, $studentUserId, $studentUserId, 'student', $overallScore];
                
                // Ajouter les colonnes de feedback si elles existent
                if ($feedbackColumn) {
                    $insertColumns[] = $feedbackColumn;
                    $insertValues[] = $feedback;
                }
                
                if ($strengthsColumn) {
                    $insertColumns[] = $strengthsColumn;
                    $insertValues[] = $strengths;
                }
                
                if ($improvementsColumn) {
                    $insertColumns[] = $improvementsColumn;
                    $insertValues[] = $improvements;
                }
                
                if (in_array('status', $evalColumns)) {
                    $insertColumns[] = 'status';
                    $insertValues[] = $status;
                }
                
                if (in_array('criteria_scores', $evalColumns)) {
                    $insertColumns[] = 'criteria_scores';
                    $insertValues[] = json_encode($selfScores);
                }
                
                if (in_array('submission_date', $evalColumns)) {
                    $insertColumns[] = 'submission_date';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(5, 30) . ' days'));
                } elseif (in_array('created_at', $evalColumns)) {
                    $insertColumns[] = 'created_at';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(5, 30) . ' days'));
                }
                
                $insertPlaceholders = array_fill(0, count($insertColumns), '?');
                
                $sql = "INSERT INTO evaluations (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $insertPlaceholders) . ")";
                $stmt = $db->prepare($sql);
                $stmt->execute($insertValues);
                $evaluationCount++;
            }
            
            // 3. √âVALUATION FINALE PAR LE TUTEUR (pour les stages avanc√©s)
            if (rand(1, 100) <= 60) { // 60% ont une √©valuation finale
                $finalScores = [];
                $totalWeightedScore = 0;
                $totalWeight = 0;
                
                foreach ($criteriaStructure as $key => $criteria) {
                    // √âvaluation finale g√©n√©ralement meilleure que mi-parcours
                    $baseScore = max(1, min(5, rand(300, 480) / 100));
                    $score = round(max(1, min(5, $baseScore)), 1);
                    $finalScores[$key] = $score;
                    $totalWeightedScore += $score * $criteria['weight'];
                    $totalWeight += $criteria['weight'];
                }
                
                $overallScore = round($totalWeightedScore / $totalWeight, 1);
                
                $feedback = "√âVALUATION FINALE - Bilan complet du stage\n\n";
                $feedback .= $studentInfo['first_name'] . " a r√©alis√© un stage ";
                $feedback .= ($overallScore >= 4.5) ? "exceptionnel" : (($overallScore >= 4.0) ? "tr√®s satisfaisant" : (($overallScore >= 3.5) ? "satisfaisant" : "correcte avec des am√©liorations n√©cessaires"));
                $feedback .= ". L'√©volution depuis le d√©but du stage est ";
                $feedback .= ($overallScore >= 4.0) ? "remarquable" : "positive";
                $feedback .= ". Les objectifs p√©dagogiques ont √©t√© ";
                $feedback .= ($overallScore >= 3.5) ? "largement atteints" : "partiellement atteints";
                $feedback .= ". L'√©tudiant(e) est pr√™t(e) pour int√©grer une √©quipe professionnelle en " . $department . ".";
                
                $strengths = implode("\n‚Ä¢ ", array_slice($deptSpecs['common_strengths'], 0, 3));
                $improvements = "Points d'am√©lioration pour la suite :\n‚Ä¢ " . implode("\n‚Ä¢ ", array_slice($deptSpecs['common_improvements'], 0, 2));
                
                $status = $evaluationTypes['final']['status_options'][rand(0, count($evaluationTypes['final']['status_options']) - 1)];
                
                $insertColumns = ['assignment_id', 'evaluator_id', 'evaluatee_id', 'type', 'score'];
                $insertValues = [$assignmentId, $teacherUserId, $studentUserId, 'final', $overallScore];
                
                // Ajouter les colonnes de feedback si elles existent
                if ($feedbackColumn) {
                    $insertColumns[] = $feedbackColumn;
                    $insertValues[] = $feedback;
                }
                
                if ($strengthsColumn) {
                    $insertColumns[] = $strengthsColumn;
                    $insertValues[] = $strengths;
                }
                
                if ($improvementsColumn) {
                    $insertColumns[] = $improvementsColumn;
                    $insertValues[] = $improvements;
                }
                
                if (in_array('status', $evalColumns)) {
                    $insertColumns[] = 'status';
                    $insertValues[] = $status;
                }
                
                if (in_array('criteria_scores', $evalColumns)) {
                    $insertColumns[] = 'criteria_scores';
                    $insertValues[] = json_encode($finalScores);
                }
                
                if (in_array('submission_date', $evalColumns)) {
                    $insertColumns[] = 'submission_date';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(1, 15) . ' days'));
                } elseif (in_array('created_at', $evalColumns)) {
                    $insertColumns[] = 'created_at';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(1, 15) . ' days'));
                }
                
                $insertPlaceholders = array_fill(0, count($insertColumns), '?');
                
                $sql = "INSERT INTO evaluations (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $insertPlaceholders) . ")";
                $stmt = $db->prepare($sql);
                $stmt->execute($insertValues);
                $evaluationCount++;
            }
            
            // 4. √âVALUATION ENTREPRISE (simul√©e par admin)
            if (rand(1, 100) <= 45) { // 45% ont une √©valuation entreprise
                $companyScores = [];
                $totalWeightedScore = 0;
                $totalWeight = 0;
                
                foreach ($criteriaStructure as $key => $criteria) {
                    // L'entreprise √©value souvent les aspects professionnels plus strictement
                    $baseScore = $criteria['category'] === 'professional' ? 
                                rand(280, 440) / 100 : rand(300, 460) / 100;
                    $score = round(max(1, min(5, $baseScore)), 1);
                    $companyScores[$key] = $score;
                    $totalWeightedScore += $score * $criteria['weight'];
                    $totalWeight += $criteria['weight'];
                }
                
                $overallScore = round($totalWeightedScore / $totalWeight, 1);
                
                $feedback = "√âVALUATION ENTREPRISE - Retour du ma√Ætre de stage\n\n";
                $feedback .= "L'√©tudiant(e) " . $studentInfo['first_name'] . " s'est bien int√©gr√©(e) dans notre √©quipe. ";
                $feedback .= "Son niveau technique est ";
                $feedback .= ($overallScore >= 4.0) ? "tr√®s satisfaisant pour un stagiaire" : "correct et en progression";
                $feedback .= ". Nous appr√©cions sa ";
                $feedback .= ["motivation", "ponctualit√©", "curiosit√©", "adaptabilit√©"][rand(0, 3)];
                $feedback .= ". Les missions confi√©es ont √©t√© ";
                $feedback .= ($overallScore >= 3.5) ? "men√©es √† bien" : "r√©alis√©es avec accompagnement";
                $feedback .= ". Nous recommandons cet(te) √©tudiant(e) pour une future collaboration.";
                
                $strengths = "Vision entreprise :\n‚Ä¢ " . implode("\n‚Ä¢ ", array_slice([
                    "Respect du cadre professionnel",
                    "Capacit√© d'√©coute et d'apprentissage",
                    "Initiative dans les t√¢ches confi√©es",
                    "Collaboration avec les √©quipes"
                ], 0, 2));
                
                $improvements = "Suggestions d'am√©lioration :\n‚Ä¢ " . implode("\n‚Ä¢ ", array_slice([
                    "D√©velopper l'assertivit√© professionnelle",
                    "Am√©liorer la gestion du stress",
                    "Renforcer la vision business des projets",
                    "√âlargir la compr√©hension des enjeux m√©tier"
                ], 0, 2));
                
                $status = $evaluationTypes['company']['status_options'][rand(0, count($evaluationTypes['company']['status_options']) - 1)];
                
                $insertColumns = ['assignment_id', 'evaluator_id', 'evaluatee_id', 'type', 'score'];
                $insertValues = [$assignmentId, $adminId, $studentUserId, 'company', $overallScore];
                
                // Ajouter les colonnes de feedback si elles existent
                if ($feedbackColumn) {
                    $insertColumns[] = $feedbackColumn;
                    $insertValues[] = $feedback;
                }
                
                if ($strengthsColumn) {
                    $insertColumns[] = $strengthsColumn;
                    $insertValues[] = $strengths;
                }
                
                if ($improvementsColumn) {
                    $insertColumns[] = $improvementsColumn;
                    $insertValues[] = $improvements;
                }
                
                if (in_array('status', $evalColumns)) {
                    $insertColumns[] = 'status';
                    $insertValues[] = $status;
                }
                
                if (in_array('criteria_scores', $evalColumns)) {
                    $insertColumns[] = 'criteria_scores';
                    $insertValues[] = json_encode($companyScores);
                }
                
                if (in_array('submission_date', $evalColumns)) {
                    $insertColumns[] = 'submission_date';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(1, 20) . ' days'));
                } elseif (in_array('created_at', $evalColumns)) {
                    $insertColumns[] = 'created_at';
                    $insertValues[] = date('Y-m-d H:i:s', strtotime('-' . rand(1, 20) . ' days'));
                }
                
                $insertPlaceholders = array_fill(0, count($insertColumns), '?');
                
                $sql = "INSERT INTO evaluations (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $insertPlaceholders) . ")";
                $stmt = $db->prepare($sql);
                $stmt->execute($insertValues);
                $evaluationCount++;
            }
        }
        
        logProgress("‚úÖ $evaluationCount √©valuations cr√©√©es avec scores d√©taill√©s et crit√®res sp√©cialis√©s");
        
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è √âvaluations: " . $e->getMessage());
    }
    
    // === 11. R√âUNIONS PROFESSIONNELLES ET INNOVANTES ===
    logProgress("ü§ù Cr√©ation des r√©unions et suivis p√©dagogiques...");
    
    try {
        $meetingCount = 0;
        $participantCount = 0;
        
        // V√©rifier si les tables existent
        $stmt = $db->query("SHOW TABLES LIKE 'meetings'");
        $hasMeetings = $stmt->rowCount() > 0;
        
        $stmt = $db->query("SHOW TABLES LIKE 'meeting_participants'");
        $hasParticipants = $stmt->rowCount() > 0;
        
        if ($hasMeetings) {
            logProgress("üìÖ G√©n√©ration des r√©unions pour chaque affectation...");
            
            // Types de r√©unions avec contenus sp√©cialis√©s
            $meetingTypes = [
                'initial_meeting' => [
                    'title_template' => 'R√©union de lancement - {student_name}',
                    'description_template' => 'Premi√®re rencontre avec {student_name} pour d√©finir les objectifs du stage en {department}. Points √† aborder : pr√©sentation du projet, planning, attentes mutuelles, et d√©finition des livrables.',
                    'duration' => 60,
                    'status' => 'completed',
                    'probability' => 95 // 95% des affectations ont cette r√©union
                ],
                'progress_review' => [
                    'title_template' => 'Point d\'avancement - {student_name}',
                    'description_template' => 'Suivi hebdomadaire avec {student_name}. R√©vision des t√¢ches accomplies, difficult√©s rencontr√©es, ajustements n√©cessaires du planning et prochaines √©tapes.',
                    'duration' => 45,
                    'status' => ['completed', 'completed', 'scheduled'][rand(0, 2)],
                    'probability' => 80
                ],
                'technical_support' => [
                    'title_template' => 'Support technique - {student_name}',
                    'description_template' => 'Session d\'aide technique avec {student_name} sur {technical_topic}. R√©solution de blocages, orientation m√©thodologique et partage d\'expertise.',
                    'duration' => 30,
                    'status' => ['completed', 'scheduled'][rand(0, 1)],
                    'probability' => 60
                ],
                'mid_evaluation' => [
                    'title_template' => '√âvaluation mi-parcours - {student_name}',
                    'description_template' => 'Bilan √† mi-parcours avec {student_name}. √âvaluation des comp√©tences acquises, feedback sur la progression, et d√©finition des objectifs pour la seconde moiti√© du stage.',
                    'duration' => 75,
                    'status' => 'completed',
                    'probability' => 90
                ],
                'final_presentation' => [
                    'title_template' => 'Soutenance finale - {student_name}',
                    'description_template' => 'Pr√©sentation finale du travail de {student_name}. D√©monstration des r√©alisations, bilan des apprentissages et √©valuation finale du stage.',
                    'duration' => 90,
                    'status' => ['scheduled', 'completed'][rand(0, 1)],
                    'probability' => 85
                ],
                'company_visit' => [
                    'title_template' => 'Visite en entreprise - {student_name}',
                    'description_template' => 'Visite de {student_name} sur son lieu de stage. Rencontre avec le ma√Ætre de stage, observation du contexte professionnel et validation de l\'int√©gration.',
                    'duration' => 120,
                    'status' => ['completed', 'scheduled'][rand(0, 1)],
                    'probability' => 40
                ],
                'group_workshop' => [
                    'title_template' => 'Atelier collectif - {department}',
                    'description_template' => 'Session de travail en groupe pour les √©tudiants de {department}. Partage d\'exp√©riences, r√©solution collaborative de probl√®mes et enrichissement mutuel.',
                    'duration' => 180,
                    'status' => ['scheduled', 'completed'][rand(0, 1)],
                    'probability' => 25
                ]
            ];
            
            // Sujets techniques par d√©partement
            $technicalTopics = [
                'Informatique' => [
                    'architecture microservices', 'optimisation des bases de donn√©es', 's√©curit√© applicative',
                    'DevOps et int√©gration continue', 'tests automatis√©s', 'refactoring de code legacy',
                    'performance des applications web', 'migration cloud', 'API RESTful'
                ],
                'G√©nie Civil' => [
                    'calculs de structures', 'normes de construction', 'gestion de projet BTP',
                    'mat√©riaux innovants', 'techniques de fondation', 'mod√©lisation 3D',
                    'd√©veloppement durable', 'r√©glementation thermique', 'pathologies du b√¢timent'
                ],
                '√âlectronique' => [
                    'conception de circuits', 'programmation embarqu√©e', 'traitement du signal',
                    'compatibilit√© √©lectromagn√©tique', 'syst√®mes de communication', 'IoT industriel',
                    'optimisation √©nerg√©tique', 'capteurs intelligents', 'r√©seaux de terrain'
                ],
                'M√©canique' => [
                    'conception assist√©e par ordinateur', 'simulation num√©rique', 'fabrication additive',
                    'maintenance pr√©dictive', 'automatisation industrielle', 'optimisation des proc√©d√©s',
                    'contr√¥le qualit√©', 'usinage CNC', 'mat√©riaux composites'
                ],
                'Math√©matiques' => [
                    'mod√©lisation statistique', 'optimisation num√©rique', 'analyse de donn√©es',
                    'apprentissage automatique', 'recherche op√©rationnelle', 'simulation Monte Carlo',
                    'th√©orie des graphes', 'analyse de s√©ries temporelles', 'statistiques bay√©siennes'
                ]
            ];
            
            // G√©n√©rer des r√©unions pour chaque affectation
            foreach ($allAssignments as $assignment) {
                $assignmentId = $assignment['assignment_id'];
                $studentId = $assignment['student_id'];
                $teacherId = $assignment['teacher_id'];
                
                // R√©cup√©rer les informations de l'√©tudiant et du tuteur
                $stmt = $db->prepare("SELECT u.first_name, u.last_name, u.department FROM users u JOIN students s ON u.id = s.user_id WHERE s.id = ?");
                $stmt->execute([$studentId]);
                $studentInfo = $stmt->fetch(PDO::FETCH_ASSOC);
                
                $stmt = $db->prepare("SELECT u.first_name, u.last_name, user_id FROM users u JOIN teachers t ON u.id = t.user_id WHERE t.id = ?");
                $stmt->execute([$teacherId]);
                $teacherInfo = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if (!$studentInfo || !$teacherInfo) {
                    continue;
                }
                
                $department = $studentInfo['department'];
                $studentName = $studentInfo['first_name'] . ' ' . $studentInfo['last_name'];
                $teacherUserId = $teacherInfo['user_id'];
                
                $stmt = $db->prepare("SELECT user_id FROM students WHERE id = ?");
                $stmt->execute([$studentId]);
                $studentUserId = $stmt->fetchColumn();
                
                // G√©n√©rer diff√©rents types de r√©unions selon les probabilit√©s
                foreach ($meetingTypes as $type => $config) {
                    if (rand(1, 100) <= $config['probability']) {
                        
                        // Pr√©parer les variables de remplacement
                        $replacements = [
                            '{student_name}' => $studentName,
                            '{department}' => $department,
                            '{technical_topic}' => $technicalTopics[$department][rand(0, count($technicalTopics[$department]) - 1)]
                        ];
                        
                        $title = str_replace(array_keys($replacements), array_values($replacements), $config['title_template']);
                        $description = str_replace(array_keys($replacements), array_values($replacements), $config['description_template']);
                        
                        // Dates intelligentes selon le type
                        $meetingDate = match($type) {
                            'initial_meeting' => date('Y-m-d H:i:s', strtotime('-' . rand(45, 90) . ' days')),
                            'progress_review' => date('Y-m-d H:i:s', strtotime('-' . rand(15, 60) . ' days')),
                            'technical_support' => date('Y-m-d H:i:s', strtotime('-' . rand(5, 45) . ' days')),
                            'mid_evaluation' => date('Y-m-d H:i:s', strtotime('-' . rand(20, 40) . ' days')),
                            'final_presentation' => rand(0, 1) ? date('Y-m-d H:i:s', strtotime('-' . rand(1, 15) . ' days')) : date('Y-m-d H:i:s', strtotime('+' . rand(5, 30) . ' days')),
                            'company_visit' => date('Y-m-d H:i:s', strtotime('-' . rand(10, 50) . ' days')),
                            'group_workshop' => date('Y-m-d H:i:s', strtotime('-' . rand(7, 21) . ' days')),
                            default => date('Y-m-d H:i:s', strtotime('-' . rand(1, 60) . ' days'))
                        };
                        
                        // Lieux r√©alistes selon le type
                        $location = match($type) {
                            'initial_meeting' => 'Bureau ' . chr(65 + rand(0, 5)) . rand(100, 300),
                            'progress_review' => 'Salle de r√©union ' . rand(1, 15),
                            'technical_support' => 'Laboratoire ' . $department,
                            'mid_evaluation' => 'Bureau du tuteur',
                            'final_presentation' => 'Amphith√©√¢tre ' . chr(65 + rand(0, 3)),
                            'company_visit' => 'Entreprise - Site client',
                            'group_workshop' => 'Salle de formation ' . rand(20, 35),
                            default => 'Salle ' . rand(100, 999)
                        };
                        
                        // Notes sp√©cialis√©es selon le d√©partement
                        $notes = match($department) {
                            'Informatique' => 'Pr√©voir laptop + acc√®s r√©seau. Documents techniques requis.',
                            'G√©nie Civil' => 'Plans et documentation technique √† apporter. Casque obligatoire si visite chantier.',
                            '√âlectronique' => 'Mat√©riel de mesure disponible. Sch√©mas √©lectroniques n√©cessaires.',
                            'M√©canique' => 'Acc√®s atelier selon disponibilit√©. EPI requis pour d√©monstrations.',
                            'Math√©matiques' => 'Tableau et support de projection disponibles. Donn√©es de test fournies.',
                            default => 'Mat√©riel standard disponible sur demande.'
                        };
                        
                        // D√©tection des colonnes disponibles
                        $stmt = $db->query("DESCRIBE meetings");
                        $meetingColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
                        
                        // Construction dynamique de la requ√™te
                        $insertColumns = ['title', 'description', 'date', 'duration', 'status', 'location'];
                        $insertValues = [$title, $description, $meetingDate, $config['duration'], $config['status'], $location];
                        
                        // Check for organizer_id or created_by column
                        if (in_array('organizer_id', $meetingColumns)) {
                            $insertColumns[] = 'organizer_id';
                            $insertValues[] = $teacherUserId;
                        } elseif (in_array('created_by', $meetingColumns)) {
                            $insertColumns[] = 'created_by';
                            $insertValues[] = $teacherUserId;
                        }
                        
                        if (in_array('assignment_id', $meetingColumns)) {
                            $insertColumns[] = 'assignment_id';
                            $insertValues[] = $assignmentId;
                        }
                        
                        if (in_array('type', $meetingColumns)) {
                            $insertColumns[] = 'type';
                            $insertValues[] = $type;
                        }
                        
                        if (in_array('notes', $meetingColumns)) {
                            $insertColumns[] = 'notes';
                            $insertValues[] = $notes;
                        }
                        
                        if (in_array('created_at', $meetingColumns)) {
                            $insertColumns[] = 'created_at';
                            $insertValues[] = date('Y-m-d H:i:s');
                        }
                        
                        $placeholders = array_fill(0, count($insertColumns), '?');
                        $sql = "INSERT INTO meetings (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $placeholders) . ")";
                        
                        $stmt = $db->prepare($sql);
                        $stmt->execute($insertValues);
                        $meetingId = $db->lastInsertId();
                        $meetingCount++;
                        
                        // Ajouter les participants si la table existe
                        if ($hasParticipants && $meetingId) {
                            // V√©rifier les colonnes disponibles
                            $stmt = $db->query("DESCRIBE meeting_participants");
                            $participantColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
                            
                            // Construire la requ√™te adaptative
                            $participantInsertColumns = ['meeting_id', 'user_id'];
                            $participantInsertValues = [$meetingId, $teacherUserId];
                            
                            if (in_array('role', $participantColumns)) {
                                $participantInsertColumns[] = 'role';
                                $participantInsertValues[] = 'organizer';
                            }
                            
                            if (in_array('status', $participantColumns)) {
                                $participantInsertColumns[] = 'status';
                                $participantInsertValues[] = 'accepted';
                            }
                            
                            if (in_array('participant_type', $participantColumns)) {
                                $participantInsertColumns[] = 'participant_type';
                                $participantInsertValues[] = 'organizer';
                            }
                            
                            $participantPlaceholders = array_fill(0, count($participantInsertColumns), '?');
                            $participantSql = "INSERT INTO meeting_participants (" . implode(', ', $participantInsertColumns) . ") VALUES (" . implode(', ', $participantPlaceholders) . ")";
                            
                            // Tuteur (organisateur)
                            $stmt = $db->prepare($participantSql);
                            $stmt->execute($participantInsertValues);
                            $participantCount++;
                            
                            // √âtudiant (participant principal)
                            $studentInsertValues = [$meetingId, $studentUserId];
                            $valueIndex = 2;
                            if (in_array('role', $participantColumns)) {
                                $studentInsertValues[] = 'participant';
                                $valueIndex++;
                            }
                            if (in_array('status', $participantColumns)) {
                                $studentInsertValues[] = 'accepted';
                                $valueIndex++;
                            }
                            if (in_array('participant_type', $participantColumns)) {
                                $studentInsertValues[] = 'participant';
                                $valueIndex++;
                            }
                            
                            $stmt->execute($studentInsertValues);
                            $participantCount++;
                            
                            // Pour les ateliers de groupe, ajouter d'autres √©tudiants du m√™me d√©partement
                            if ($type === 'group_workshop' && rand(1, 100) <= 70) {
                                $stmt = $db->prepare("
                                    SELECT DISTINCT s.user_id 
                                    FROM students s 
                                    JOIN users u ON s.user_id = u.id 
                                    WHERE u.department = ? AND s.user_id != ? 
                                    LIMIT " . rand(3, 8)
                                );
                                $stmt->execute([$department, $studentUserId]);
                                $otherStudents = $stmt->fetchAll(PDO::FETCH_COLUMN);
                                
                                foreach ($otherStudents as $otherStudentId) {
                                    $otherInsertValues = [$meetingId, $otherStudentId];
                                    if (in_array('role', $participantColumns)) {
                                        $otherInsertValues[] = 'participant';
                                    }
                                    if (in_array('status', $participantColumns)) {
                                        $otherInsertValues[] = ['accepted', 'pending', 'declined'][rand(0, 2)];
                                    }
                                    if (in_array('participant_type', $participantColumns)) {
                                        $otherInsertValues[] = 'participant';
                                    }
                                    
                                    $stmt = $db->prepare($participantSql);
                                    $stmt->execute($otherInsertValues);
                                    $participantCount++;
                                }
                            }
                        }
                    }
                }
            }
            
            logProgress("‚úÖ $meetingCount r√©unions cr√©√©es avec $participantCount participants");
        } else {
            logProgress("‚ö†Ô∏è Table meetings non trouv√©e - r√©unions ignor√©es");
        }
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è R√©unions: " . $e->getMessage());
    }
    
    // === 12. PR√âF√âRENCES √âTUDIANTS R√âALISTES ===
    logProgress("üéØ G√©n√©ration des pr√©f√©rences √©tudiants...");
    
    try {
        $studentPrefCount = 0;
        
        // V√©rifier les tables de pr√©f√©rences
        $stmt = $db->query("SHOW TABLES LIKE 'student_preferences'");
        $hasStudentPrefs = $stmt->rowCount() > 0;
        
        $stmt = $db->query("SHOW TABLES LIKE 'student_internship_preferences'");
        $hasInternshipPrefs = $stmt->rowCount() > 0;
        
        if ($hasStudentPrefs) {
            // Pr√©f√©rences par d√©partement avec r√©alisme
            $departmentPreferences = [
                'Informatique' => [
                    'company_types' => ['startup_tech', 'grande_entreprise', 'pme_innovative', 'service_public'],
                    'technical_interests' => ['web_development', 'mobile_apps', 'data_science', 'cybersecurity', 'devops', 'ai_ml'],
                    'work_environments' => ['remote_friendly', 'collaborative', 'autonomous', 'structured'],
                    'project_types' => ['innovation', 'maintenance', 'development', 'research']
                ],
                'G√©nie Civil' => [
                    'company_types' => ['bureau_etudes', 'entreprise_btp', 'collectivite', 'industrie'],
                    'technical_interests' => ['structural_design', 'project_management', 'sustainable_construction', 'urban_planning'],
                    'work_environments' => ['office_site_mix', 'team_oriented', 'fieldwork', 'technical_office'],
                    'project_types' => ['construction', 'renovation', 'infrastructure', 'environmental']
                ],
                '√âlectronique' => [
                    'company_types' => ['industrie_electronique', 'telecommunications', 'automobile', 'aeronautique'],
                    'technical_interests' => ['embedded_systems', 'signal_processing', 'iot', 'automation'],
                    'work_environments' => ['laboratory', 'production', 'r_and_d', 'quality_control'],
                    'project_types' => ['conception', 'prototyping', 'testing', 'optimization']
                ],
                'M√©canique' => [
                    'company_types' => ['industrie_manufacturiere', 'automobile', 'aeronautique', 'energie'],
                    'technical_interests' => ['cad_design', 'manufacturing', 'automation', 'maintenance'],
                    'work_environments' => ['workshop', 'design_office', 'production_line', 'laboratory'],
                    'project_types' => ['design', 'manufacturing', 'improvement', 'maintenance']
                ],
                'Math√©matiques' => [
                    'company_types' => ['finance', 'consulting', 'research', 'tech_company'],
                    'technical_interests' => ['data_analysis', 'statistical_modeling', 'optimization', 'machine_learning'],
                    'work_environments' => ['analytical', 'research_oriented', 'collaborative', 'independent'],
                    'project_types' => ['analysis', 'modeling', 'optimization', 'research']
                ]
            ];
            
            foreach ($studentUserIds as $studentUserId) {
                // R√©cup√©rer l'ID √©tudiant, le d√©partement et l'internship_id s'il existe
                $stmt = $db->prepare("
                    SELECT u.department, s.id as student_id, a.internship_id 
                    FROM users u 
                    JOIN students s ON u.id = s.user_id 
                    LEFT JOIN assignments a ON s.id = a.student_id
                    WHERE u.id = ?
                ");
                $stmt->execute([$studentUserId]);
                $studentData = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if (!$studentData || !isset($departmentPreferences[$studentData['department']])) {
                    continue;
                }
                
                // Si la table student_preferences exige un internship_id et qu'on n'en a pas, ignorer cet √©tudiant
                $stmt = $db->query("DESCRIBE student_preferences");
                $prefColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
                
                if (in_array('internship_id', $prefColumns)) {
                    // V√©rifier si la colonne internship_id est NOT NULL
                    $stmt = $db->query("SHOW COLUMNS FROM student_preferences WHERE Field = 'internship_id'");
                    $columnInfo = $stmt->fetch(PDO::FETCH_ASSOC);
                    
                    if ($columnInfo && $columnInfo['Null'] === 'NO' && (!$studentData['internship_id'] || !is_numeric($studentData['internship_id']))) {
                        // Cette table exige un internship_id et on n'en a pas de valide, ignorer
                        continue;
                    }
                }
                
                $department = $studentData['department'];
                $studentId = $studentData['student_id'];
                $internshipId = $studentData['internship_id'];
                $deptPrefs = $departmentPreferences[$department];
                
                // G√©n√©rer des pr√©f√©rences coh√©rentes
                $preferences = [
                    'company_type' => $deptPrefs['company_types'][rand(0, count($deptPrefs['company_types']) - 1)],
                    'technical_interest' => $deptPrefs['technical_interests'][rand(0, count($deptPrefs['technical_interests']) - 1)],
                    'work_environment' => $deptPrefs['work_environments'][rand(0, count($deptPrefs['work_environments']) - 1)],
                    'project_type' => $deptPrefs['project_types'][rand(0, count($deptPrefs['project_types']) - 1)],
                    'location_preference' => ['local', 'regional', 'national', 'international'][rand(0, 3)],
                    'duration_preference' => [8, 12, 16, 20, 24][rand(0, 4)], // semaines
                    'salary_expectation' => rand(800, 1500), // euros/mois
                    'transport_mode' => ['public_transport', 'personal_vehicle', 'walking', 'cycling'][rand(0, 3)],
                    'schedule_preference' => ['standard', 'flexible', 'early_bird', 'afternoon'][rand(0, 3)]
                ];
                
                // Construction adaptative de la requ√™te (prefColumns d√©j√† r√©cup√©r√©es plus haut)
                $insertColumns = ['student_id'];
                $insertValues = [$studentId];
                
                foreach ($preferences as $key => $value) {
                    if (in_array($key, $prefColumns)) {
                        $insertColumns[] = $key;
                        $insertValues[] = is_string($value) ? $value : $value;
                    }
                }
                
                // Ajouter l'internship_id si la colonne existe et qu'on a un internship_id valide
                if (in_array('internship_id', $prefColumns) && $internshipId && is_numeric($internshipId) && $internshipId > 0) {
                    // V√©rifier que l'internship existe r√©ellement
                    $checkStmt = $db->prepare("SELECT COUNT(*) FROM internships WHERE id = ?");
                    $checkStmt->execute([$internshipId]);
                    if ($checkStmt->fetchColumn() > 0) {
                        $insertColumns[] = 'internship_id';
                        $insertValues[] = $internshipId;
                    }
                }
                
                // Ajouter des colonnes communes si elles existent
                if (in_array('preferences_json', $prefColumns)) {
                    $insertColumns[] = 'preferences_json';
                    $insertValues[] = json_encode($preferences);
                }
                
                if (in_array('created_at', $prefColumns)) {
                    $insertColumns[] = 'created_at';
                    $insertValues[] = date('Y-m-d H:i:s');
                }
                
                if (in_array('priority_level', $prefColumns)) {
                    $insertColumns[] = 'priority_level';
                    $insertValues[] = rand(1, 5);
                }
                
                $placeholders = array_fill(0, count($insertColumns), '?');
                $sql = "INSERT INTO student_preferences (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $placeholders) . ")";
                
                $stmt = $db->prepare($sql);
                $stmt->execute($insertValues);
                $studentPrefCount++;
            }
            
            logProgress("‚úÖ $studentPrefCount pr√©f√©rences √©tudiants cr√©√©es");
        } else {
            logProgress("‚ö†Ô∏è Table student_preferences non trouv√©e");
        }
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è Pr√©f√©rences √©tudiants: " . $e->getMessage());
    }
    
    // === 13. PR√âF√âRENCES TUTEURS PROFESSIONNELLES ===
    logProgress("üë®‚Äçüè´ G√©n√©ration des pr√©f√©rences tuteurs...");
    
    try {
        $teacherPrefCount = 0;
        
        $stmt = $db->query("SHOW TABLES LIKE 'teacher_preferences'");
        $hasTeacherPrefs = $stmt->rowCount() > 0;
        
        if ($hasTeacherPrefs) {
            foreach ($tutorUserIds as $tutorUserId) {
                // R√©cup√©rer l'ID teacher et le d√©partement
                $stmt = $db->prepare("SELECT u.department, t.id as teacher_id FROM users u JOIN teachers t ON u.id = t.user_id WHERE u.id = ?");
                $stmt->execute([$tutorUserId]);
                $teacherData = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if (!$teacherData) {
                    continue;
                }
                
                $department = $teacherData['department'];
                $teacherId = $teacherData['teacher_id'];
                
                // Pr√©f√©rences professionnelles du tuteur
                $teacherPreferences = [
                    'max_students' => rand(3, 8), // Nombre max d'√©tudiants encadr√©s
                    'experience_level' => ['beginner', 'intermediate', 'advanced'][rand(0, 2)],
                    'supervision_style' => ['hands_on', 'autonomous', 'collaborative', 'structured'][rand(0, 3)],
                    'meeting_frequency' => ['weekly', 'biweekly', 'monthly', 'on_demand'][rand(0, 3)],
                    'feedback_style' => ['detailed', 'concise', 'constructive', 'encouraging'][rand(0, 3)],
                    'availability_days' => json_encode(array_slice(['monday', 'tuesday', 'wednesday', 'thursday', 'friday'], 0, rand(3, 5))),
                    'preferred_communication' => ['email', 'video_call', 'in_person', 'chat'][rand(0, 3)],
                    'specialization_areas' => match($department) {
                        'Informatique' => json_encode(array_slice(['web_dev', 'mobile', 'data_science', 'ai', 'cybersecurity'], 0, rand(2, 3))),
                        'G√©nie Civil' => json_encode(array_slice(['structures', 'btp', 'urban_planning', 'environment'], 0, rand(2, 3))),
                        '√âlectronique' => json_encode(array_slice(['embedded', 'telecom', 'automation', 'iot'], 0, rand(2, 3))),
                        'M√©canique' => json_encode(array_slice(['design', 'manufacturing', 'maintenance', 'automation'], 0, rand(2, 3))),
                        'Math√©matiques' => json_encode(array_slice(['statistics', 'modeling', 'optimization', 'data_analysis'], 0, rand(2, 3))),
                        default => json_encode(['general'])
                    }
                ];
                
                // Construction adaptative
                $stmt = $db->query("DESCRIBE teacher_preferences");
                $teacherPrefColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
                
                $insertColumns = ['teacher_id'];
                $insertValues = [$teacherId];
                
                foreach ($teacherPreferences as $key => $value) {
                    if (in_array($key, $teacherPrefColumns)) {
                        $insertColumns[] = $key;
                        $insertValues[] = $value;
                    }
                }
                
                if (in_array('preferences_json', $teacherPrefColumns)) {
                    $insertColumns[] = 'preferences_json';
                    $insertValues[] = json_encode($teacherPreferences);
                }
                
                if (in_array('created_at', $teacherPrefColumns)) {
                    $insertColumns[] = 'created_at';
                    $insertValues[] = date('Y-m-d H:i:s');
                }
                
                $placeholders = array_fill(0, count($insertColumns), '?');
                $sql = "INSERT INTO teacher_preferences (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $placeholders) . ")";
                
                $stmt = $db->prepare($sql);
                $stmt->execute($insertValues);
                $teacherPrefCount++;
            }
            
            logProgress("‚úÖ $teacherPrefCount pr√©f√©rences tuteurs cr√©√©es");
        } else {
            logProgress("‚ö†Ô∏è Table teacher_preferences non trouv√©e");
        }
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è Pr√©f√©rences tuteurs: " . $e->getMessage());
    }
    
    // === 14. PARAM√àTRES D'ALGORITHMES AVANC√âS ===
    logProgress("‚öôÔ∏è G√©n√©ration des param√®tres d'algorithmes d'affectation...");
    
    try {
        $algorithmCount = 0;
        
        $stmt = $db->query("SHOW TABLES LIKE 'algorithm_parameters'");
        $hasAlgorithmParams = $stmt->rowCount() > 0;
        
        if ($hasAlgorithmParams) {
            // Configurations d'algorithmes professionnelles
            $algorithmConfigs = [
                [
                    'name' => 'Affectation √âquilibr√©e D√©partement',
                    'description' => 'Algorithme optimisant la r√©partition par d√©partement avec pond√©ration des comp√©tences techniques',
                    'algorithm_type' => 'weighted_matching',
                    'department_weight' => 70,
                    'preference_weight' => 20,
                    'capacity_weight' => 10,
                    'allow_cross_department' => 0,
                    'prioritize_preferences' => 1,
                    'balance_workload' => 1
                ],
                [
                    'name' => 'Optimisation Pr√©f√©rences √âtudiants',
                    'description' => 'Maximise la satisfaction des pr√©f√©rences √©tudiants tout en respectant les contraintes p√©dagogiques',
                    'algorithm_type' => 'preference_optimizer',
                    'department_weight' => 30,
                    'preference_weight' => 60,
                    'capacity_weight' => 10,
                    'allow_cross_department' => 1,
                    'prioritize_preferences' => 1,
                    'balance_workload' => 0
                ],
                [
                    'name' => '√âquilibrage Charge Tuteurs',
                    'description' => 'R√©partit √©quitablement la charge de travail entre tuteurs selon leurs capacit√©s et sp√©cialit√©s',
                    'algorithm_type' => 'load_balancer',
                    'department_weight' => 40,
                    'preference_weight' => 15,
                    'capacity_weight' => 45,
                    'allow_cross_department' => 0,
                    'prioritize_preferences' => 0,
                    'balance_workload' => 1
                ],
                [
                    'name' => 'Hybride Adaptatif Intelligent',
                    'description' => 'Combinaison dynamique de plusieurs algorithmes selon les contraintes du semestre',
                    'algorithm_type' => 'adaptive_hybrid',
                    'department_weight' => 50,
                    'preference_weight' => 35,
                    'capacity_weight' => 15,
                    'allow_cross_department' => 1,
                    'prioritize_preferences' => 1,
                    'balance_workload' => 1
                ],
                [
                    'name' => 'Sp√©cialisation Technique',
                    'description' => 'Privil√©gie l\'ad√©quation entre sp√©cialit√©s techniques des tuteurs et besoins des projets',
                    'algorithm_type' => 'skill_matching',
                    'department_weight' => 80,
                    'preference_weight' => 10,
                    'capacity_weight' => 10,
                    'allow_cross_department' => 0,
                    'prioritize_preferences' => 0,
                    'balance_workload' => 0
                ],
                [
                    'name' => 'Machine Learning Pr√©dictif',
                    'description' => 'Utilise l\'historique des affectations r√©ussies pour optimiser les nouvelles assignations',
                    'algorithm_type' => 'ml_predictive',
                    'department_weight' => 45,
                    'preference_weight' => 40,
                    'capacity_weight' => 15,
                    'allow_cross_department' => 1,
                    'prioritize_preferences' => 1,
                    'balance_workload' => 1
                ]
            ];
            
            foreach ($algorithmConfigs as $config) {
                // V√©rifier les colonnes disponibles
                $stmt = $db->query("DESCRIBE algorithm_parameters");
                $algoColumns = $stmt->fetchAll(PDO::FETCH_COLUMN);
                
                $insertColumns = [];
                $insertValues = [];
                
                foreach ($config as $key => $value) {
                    if (in_array($key, $algoColumns)) {
                        $insertColumns[] = $key;
                        $insertValues[] = $value;
                    }
                }
                
                if (in_array('created_at', $algoColumns)) {
                    $insertColumns[] = 'created_at';
                    $insertValues[] = date('Y-m-d H:i:s');
                }
                
                if (in_array('is_default', $algoColumns)) {
                    $insertColumns[] = 'is_default';
                    $insertValues[] = $algorithmCount === 0 ? 1 : 0; // Premier comme d√©faut
                }
                
                $placeholders = array_fill(0, count($insertColumns), '?');
                $sql = "INSERT INTO algorithm_parameters (" . implode(', ', $insertColumns) . ") VALUES (" . implode(', ', $placeholders) . ")";
                
                $stmt = $db->prepare($sql);
                $stmt->execute($insertValues);
                $algorithmCount++;
            }
            
            logProgress("‚úÖ $algorithmCount configurations d'algorithmes cr√©√©es");
        } else {
            logProgress("‚ö†Ô∏è Table algorithm_parameters non trouv√©e");
        }
    } catch (Exception $e) {
        logProgress("‚ö†Ô∏è Param√®tres algorithmes: " . $e->getMessage());
    }
    
    // Valider toutes les transactions
    $db->commit();
    
    // === RAPPORT FINAL ===
    echo "<div style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 15px; margin: 30px 0;'>";
    echo "<h2 style='margin: 0 0 20px 0; font-size: 2.5em;'>üéâ INSTALLATION COMPL√àTE TERMIN√âE !</h2>";
    echo "</div>";
    
    echo "<div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin: 20px 0;'>";
    
    // Statistiques Utilisateurs
    echo "<div style='background: #e8f5e8; padding: 20px; border-radius: 10px; border-left: 5px solid #28a745;'>";
    echo "<h3 style='color: #28a745; margin-top: 0;'>üë• Utilisateurs Cr√©√©s</h3>";
    echo "<ul style='list-style: none; padding: 0;'>";
    echo "<li>üìä <strong>1 Administrateur</strong></li>";
    echo "<li>üéì <strong>52 Tuteurs</strong> (r√©partis par d√©partement)</li>";
    echo "<li>üéí <strong>205 √âtudiants</strong> (r√©partis par d√©partement)</li>";
    echo "<li>üìà <strong>Total: 258 utilisateurs</strong></li>";
    echo "</ul>";
    echo "</div>";
    
    // Statistiques Acad√©miques
    echo "<div style='background: #e3f2fd; padding: 20px; border-radius: 10px; border-left: 5px solid #2196f3;'>";
    echo "<h3 style='color: #2196f3; margin-top: 0;'>üè´ Donn√©es Acad√©miques</h3>";
    echo "<ul style='list-style: none; padding: 0;'>";
    echo "<li>üè¢ <strong>" . count($companyIds) . " Entreprises</strong> sp√©cialis√©es</li>";
    echo "<li>üíº <strong>$internshipCount Stages</strong> coh√©rents</li>";
    echo "<li>üìã <strong>$assignmentCount Affectations</strong> par d√©partement</li>";
    echo "<li>üìä <strong>$evaluationCount √âvaluations</strong> p√©dagogiques</li>";
    echo "</ul>";
    echo "</div>";
    
    // Statistiques Techniques
    echo "<div style='background: #fff3e0; padding: 20px; border-radius: 10px; border-left: 5px solid #ff9800;'>";
    echo "<h3 style='color: #ff9800; margin-top: 0;'>üìÅ Fichiers & Communication</h3>";
    echo "<ul style='list-style: none; padding: 0;'>";
    echo "<li>üìÑ <strong>$documentCount Documents</strong> (.md et .txt)</li>";
    echo "<li>üí¨ <strong>$messageCount Messages</strong> √©chang√©s</li>";
    echo "<li>üìÇ <strong>Dossier:</strong> uploads/documents/</li>";
    echo "<li>üìä <strong>3 √âvaluations</strong> par √©tudiant affect√©</li>";
    echo "<li>üîê <strong>Connexion:</strong> Username / 12345678</li>";
    echo "</ul>";
    echo "</div>";
    
    echo "</div>";
    
    // R√©partition par d√©partement
    echo "<div style='background: #f8f9fa; padding: 20px; border-radius: 10px; margin: 20px 0;'>";
    echo "<h3 style='color: #495057;'>üìä R√©partition par D√©partement</h3>";
    echo "<div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;'>";
    
    foreach ($departments as $dept => $config) {
        echo "<div style='background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'>";
        echo "<h4 style='margin: 0 0 10px 0; color: #343a40;'>$dept</h4>";
        echo "<p style='margin: 5px 0; font-size: 0.9em;'><strong>Tuteurs:</strong> {$config['tutors']}</p>";
        echo "<p style='margin: 5px 0; font-size: 0.9em;'><strong>√âtudiants:</strong> {$config['students']}</p>";
        echo "<p style='margin: 5px 0; font-size: 0.9em;'><strong>Stages:</strong> " . count($internshipsByDept[$dept]) . "</p>";
        echo "</div>";
    }
    
    echo "</div></div>";
    
    // Comptes de test
    echo "<div style='background: #2c3e50; color: white; padding: 20px; border-radius: 10px; margin: 20px 0;'>";
    echo "<h3 style='color: white; margin-top: 0;'>üîë Comptes de Test - CONNEXION PAR USERNAME</h3>";
    echo "<div style='background: rgba(255,255,255,0.1); padding: 15px; border-radius: 8px;'>";
    echo "<p style='color: #f39c12; font-weight: bold;'>‚ö†Ô∏è IMPORTANT: Utilisez le USERNAME pour vous connecter (pas l'email)</p>";
    echo "<p><strong>üëë Admin:</strong> Username: <code>admin</code> / Mot de passe: <code>12345678</code></p>";
    echo "<p><strong>üéì Tuteur Info:</strong> Username: <code>thomas.martin</code> / Mot de passe: <code>12345678</code></p>";
    echo "<p><strong>üéì Tuteur G√©nie Civil:</strong> Username: <code>vincent.girard</code> / Mot de passe: <code>12345678</code></p>";
    echo "<p><strong>üéí √âtudiant Info:</strong> Username: <code>alexandre</code> / Mot de passe: <code>12345678</code></p>";
    echo "<p><strong>üéí √âtudiant G√©nie Civil:</strong> Username: <code>lucas</code> / Mot de passe: <code>12345678</code></p>";
    echo "<p style='font-size: 0.9em; color: #bdc3c7;'>Tous les comptes utilisent le mot de passe: <strong>12345678</strong></p>";
    echo "</div>";
    echo "</div>";
    
    // Prochaines √©tapes
    echo "<div style='background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%); color: white; padding: 20px; border-radius: 10px; margin: 20px 0;'>";
    echo "<h3 style='color: white; margin-top: 0;'>üöÄ Prochaines √âtapes</h3>";
    echo "<ol style='font-size: 1.1em; line-height: 1.6;'>";
    echo "<li><strong>Connectez-vous</strong> avec un compte tuteur pour v√©rifier les affectations multiples</li>";
    echo "<li><strong>Testez les d√©partements</strong> - un tuteur en Informatique ne supervise que des √©tudiants en Informatique</li>";
    echo "<li><strong>V√©rifiez les corrections LEFT JOIN</strong> - tous les √©tudiants d'un tuteur doivent s'afficher</li>";
    echo "<li><strong>Explorez les √©valuations et documents</strong> - donn√©es r√©alistes et coh√©rentes</li>";
    echo "<li><strong>Testez la messagerie</strong> - communications entre tuteurs et √©tudiants</li>";
    echo "</ol>";
    echo "</div>";
    
} catch (Exception $e) {
    if (isset($db) && $db->inTransaction()) {
        $db->rollBack();
    }
    echo "<div class='alert alert-danger'>";
    echo "<h4><i class='bi bi-exclamation-triangle me-2'></i>Erreur durant la g√©n√©ration</h4>";
    echo "<p><strong>Message:</strong> " . $e->getMessage() . "</p>";
    echo "<p><strong>Ligne:</strong> " . $e->getLine() . "</p>";
    echo "<p><strong>Fichier:</strong> " . $e->getFile() . "</p>";
    echo "<details class='mt-3'>";
    echo "<summary>D√©tails de l'erreur</summary>";
    echo "<pre class='mt-2'>" . $e->getTraceAsString() . "</pre>";
    echo "</details>";
    echo "</div>";
}
?>
                </div>
                
                <div class="text-center mt-4">
                    <a href="index.php" class="btn btn-gradient me-3">
                        <i class="bi bi-house-door me-2"></i>Aller au syst√®me
                    </a>
                    <a href="install.php" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-2"></i>Retour √† l'installation
                    </a>
                </div>
                <?php endif; ?>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Auto-scroll pour les logs
        document.addEventListener('DOMContentLoaded', function() {
            const logContainer = document.getElementById('logContainer');
            if (logContainer) {
                setInterval(function() {
                    logContainer.scrollTop = logContainer.scrollHeight;
                }, 1000);
            }
        });
    </script>
</body>
</html>